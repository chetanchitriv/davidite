{"version":3,"sources":["./src/app/generic/menu/menu.component.ts","./src/app/generic/menu/menu.component.html","./src/app/concept/newfunctiondialog/newfunctiondialog.component.ts","./src/app/concept/newfunctiondialog/newfunctiondialog.component.html","./src/app/solution/solution.component.ts","./src/app/solution/solution.component.html","./src/app/widgets/widgets.module.ts","./src/app/widgets/math-sym.pipe.ts","./src/app/concept/updateconcept/updateconcept.component.ts","./src/app/concept/updateconcept/updateconcept.component.html","./src/app/concept/define-solution/define-solution.component.ts","./src/app/concept/define-solution/define-solution.component.html","./src/app/parts/part.service.ts","./src/app/concept/update-concept-stepper/update-concept-stepper.component.ts","./src/app/concept/update-concept-stepper/update-concept-stepper.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/concept/defineconcept/defineconcept.component.ts","./src/app/concept/defineconcept/defineconcept.component.html","./src/app/concept/createconcept/createconcept.component.ts","./src/app/concept/createconcept/createconcept.component.html","./src/app/concept/defineconcept/ad-component.directive.ts","./src/app/widgets/math-editor/math-editor.component.ts","./src/app/widgets/math-editor/math-editor.component.html","./src/app/widgets/math-editor/math-quill-button/math-quill-button.component.ts","./src/app/widgets/math-editor/math-quill-button/math-quill-button.component.html","./src/app/concept/concept-form/concept-form.component.ts","./src/app/concept/concept-form/concept-form.component.html","./src/app/concept/defineconcept/concept-form-builder/concept-form-builder.component.ts","./src/app/concept/defineconcept/concept-form-builder/concept-form-builder.component.html","./src/app/auth/signup/signup.component.ts","./src/app/auth/signup/signup.component.html","./src/app/steps/createstep/createstep.component.ts","./src/app/steps/createstep/createstep.component.html","./src/app/widgets/math-editor/math-rules.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/concept/concept-form/concept-form-control/concept-form-control.component.ts","./src/app/concept/concept-form/concept-form-control/concept-form-control.component.html","./src/app/auth/auth/auth.component.ts","./src/app/auth/auth/auth.component.html","./src/app/evalfunctions/evalfunction.service.ts","./src/app/terms/term.service.ts","./src/app/concept/concept-form/concept-form.service.ts","./src/app/app.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/steps/step.service.ts","./src/app/functions/function.service.ts","./src/app/subjects/subject.service.ts","./src/app/steps/definesteps/definesteps.component.ts","./src/app/steps/definesteps/definesteps.component.html","./src/app/concept/newtermdialog/newtermdialog.component.ts","./src/app/concept/newtermdialog/newtermdialog.component.html","./src/app/concept/concept-form/concept-form-dialog/concept-form-dialog.component.ts","./src/app/concept/concept-form/concept-form-dialog/concept-form-dialog.component.html","./src/app/concept/defineconcept/concept-form-builder/list-item/list-item.component.ts","./src/app/concept/defineconcept/concept-form-builder/list-item/list-item.component.html","./src/app/auth/auth.service.ts","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/app-routing.module.ts","./src/app/concept/concept.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"menu-container\">\n    <mat-card  routerLink=\"/home\" routerLinkActive=\"active\">\n        <div>\n            <mat-icon>home</mat-icon>\n            <span>Home</span>\n        </div>\n    </mat-card>\n    <mat-card  routerLink=\"/404\" routerLinkActive=\"active\">\n        <div>\n            <mat-icon>work_outline</mat-icon>\n            <span>Work</span>\n        </div>\n    </mat-card>\n    <mat-card   routerLink=\"/404\" routerLinkActive=\"active\">\n        <div>\n            <mat-icon>email</mat-icon>\n            <span>Messages</span>\n        </div>\n    </mat-card>\n    <mat-card   routerLink=\"/404\" routerLinkActive=\"active\">\n        <div>\n            <mat-icon>groups</mat-icon>\n            <span>Team</span>\n        </div>\n    </mat-card>\n    <mat-card   routerLink=\"/404\" routerLinkActive=\"active\">\n        <div>\n            <mat-icon>account_circle</mat-icon>\n            <span>Your Profile</span>\n        </div>\n    </mat-card>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Function } from 'src/app/functions/function';\nimport { FunctionService } from 'src/app/functions/function.service';\n\n@Component({\n  selector: 'app-newfunctiondialog',\n  templateUrl: './newfunctiondialog.component.html',\n  styleUrls: ['./newfunctiondialog.component.scss']\n})\nexport class NewfunctiondialogComponent implements OnInit {\n\n  createFunctionForm = new FormGroup({\n    name: new FormControl(''),\n    ftype: new FormControl('')\n  });\n\n  constructor(\n    public dialogRef: MatDialogRef<NewfunctiondialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Function,\n    private functionService: FunctionService\n  ) {\n    console.log(data);\n   }\n\n  ngOnInit(): void {\n  }\n\n  createFunction(): void {\n    const formValue = this.createFunctionForm.value;\n    this.data.name = formValue.name;\n    this.data.ftype = formValue.ftype;\n\n    this.functionService.createFunction(this.data)\n      .subscribe((data: Function) => {\n        this.dialogRef.close(data);\n      });\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<h1 mat-dialog-title>Create new function</h1>\n<div mat-dialog-content>\n    <form [formGroup]=\"createFunctionForm\">\n        <mat-form-field appearance=\"fill\" class=\"full-width\">\n            <mat-label>Function Name</mat-label>\n            <input matInput placeholder=\"Enter function name\" formControlName=\"name\" type=\"text\" required />\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\" class=\"full-width\">\n            <mat-label>Type</mat-label>\n            <input matInput placeholder=\"Enter function type\" formControlName=\"ftype\" type=\"text\" required />\n        </mat-form-field>\n    </form>\n</div>\n<div mat-dialog-actions>\n    <button mat-button (click)=\"onNoClick()\" cdkFocusInitial>No Thanks</button>\n    <button mat-button (click)=\"createFunction()\" [disabled]=\"!createFunctionForm.valid\">Define new function</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-solution',\n  templateUrl: './solution.component.html',\n  styleUrls: ['./solution.component.scss']\n})\nexport class SolutionComponent implements OnInit {\n  name = 'Angular';\n  productForm: FormGroup;\n\n  constructor(private fb: FormBuilder) { \n    this.productForm = this.fb.group({\n      name: '',\n      quantities: this.fb.array([]),\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  quantities() : FormArray {\n    return this.productForm.get(\"quantities\") as FormArray;\n  }\n   \n  newQuantity(): FormGroup {\n    return this.fb.group({\n      qty: '',\n    })\n  }\n   \n  addQuantity() {\n    this.quantities().push(this.newQuantity());\n  }\n   \n  removeQuantity(i:number) {\n    this.quantities().removeAt(i);\n  }\n   \n  onSubmit() {\n    console.log(this.productForm.value);\n  }\n\n}\n","<div class=\"container\">\n\n  <h1>Angular FormArray Example - ItSolutionStuff.com</h1>\n\n  <form [formGroup]=\"productForm\" (ngSubmit)=\"onSubmit()\">\n\n    <p>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Name</mat-label>\n        <input matInput formControlName=\"name\">\n      </mat-form-field>\n    </p>\n\n    <table class=\"table table-bordered\" formArrayName=\"quantities\">\n      <tr>\n        <th colspan=\"2\">Add Multiple Quantity:</th>\n        <th width=\"150px\"><button type=\"button\" (click)=\"addQuantity()\" class=\"btn btn-primary\">Add More</button></th>\n      </tr>\n      <tr *ngFor=\"let quantity of quantities().controls; let i=index\" [formGroupName]=\"i\">\n        <td>\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Quantity</mat-label>\n            <input matInput formControlName=\"qty\">\n          </mat-form-field>\n        </td>\n        <td>\n          <button (click)=\"removeQuantity(i)\" class=\"btn btn-danger\">Remove</button>\n        </td>\n      </tr>\n    </table>\n\n    <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n\n  </form>\n\n  <br />\n  {{this.productForm.value | json}}\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MathEditorComponent } from './math-editor/math-editor.component';\r\n\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatListModule } from '@angular/material/list';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MathSymPipe } from './math-sym.pipe';\r\nimport { MathQuillButtonComponent } from './math-editor/math-quill-button/math-quill-button.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [MathEditorComponent, MathSymPipe, MathQuillButtonComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatTabsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    MatCardModule,\r\n    MatGridListModule,\r\n    MatDialogModule,\r\n    MatButtonToggleModule,\r\n    MatMenuModule,\r\n    MatListModule,\r\n\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  exports:[\r\n    MathEditorComponent\r\n  ]\r\n})\r\nexport class WidgetsModule { }\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'mathSym'\r\n})\r\nexport class MathSymPipe implements PipeTransform {\r\n\r\n  transform(value: unknown, ...args: unknown[]): unknown {\r\n    return null;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { forkJoin } from 'rxjs';\r\nimport { Function } from 'src/app/functions/function';\r\nimport { FunctionService } from 'src/app/functions/function.service';\r\nimport { Part } from 'src/app/parts/part';\r\nimport { PartService } from 'src/app/parts/part.service';\r\nimport { Subject } from 'src/app/subjects/subject';\r\nimport { SubjectService } from 'src/app/subjects/subject.service';\r\nimport { Term } from 'src/app/terms/term';\r\nimport { TermService } from 'src/app/terms/term.service';\r\nimport { Concept } from '../concept';\r\nimport { ConceptService } from '../concept.service';\r\nimport { NewfunctiondialogComponent } from '../newfunctiondialog/newfunctiondialog.component';\r\nimport { NewtermdialogComponent } from '../newtermdialog/newtermdialog.component';\r\n\r\n@Component({\r\n  selector: 'app-updateconcept',\r\n  templateUrl: './updateconcept.component.html',\r\n  styleUrls: ['./updateconcept.component.scss']\r\n})\r\nexport class UpdateconceptComponent implements OnInit {\r\n\r\n  conceptId: string;\r\n  subjects: Subject[];\r\n  parts: Part[];\r\n  concept: Concept;\r\n  mathEquation: any =\"\";\r\n  functions: Function[];\r\n\r\n  updateConceptForm = new FormGroup({\r\n    subject: new FormControl(),\r\n    part: new FormControl(),\r\n    name: new FormControl(''),\r\n    symbol: new FormControl(''),\r\n    optionalSymbol: new FormControl(''),\r\n    author: new FormControl(''),\r\n    meaning: new FormControl(''),\r\n    definition: new FormControl(''),\r\n  });\r\n\r\n  changeSymbol = this.onChangeSymbol.bind(this)\r\n\r\n  constructor(\r\n    private subjectService: SubjectService,\r\n    private partService: PartService,\r\n    private conceptService: ConceptService,\r\n    private functionService: FunctionService,\r\n    private termService: TermService,\r\n    private route: ActivatedRoute,\r\n    public dialog: MatDialog\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.conceptId = this.route.snapshot.paramMap.get('id');\r\n    this.getAndFillConceptData();\r\n  }\r\n\r\n  getAndFillConceptData() {\r\n    this.showSubjects();\r\n    this.showParts();\r\n    this.showConcepts();\r\n  }\r\n\r\n  showSubjects() {\r\n    this.subjectService.getSubjectsList()\r\n      .subscribe((data: Subject[]) => {\r\n        this.subjects = data;\r\n        this.showSubjectValue();\r\n      });\r\n  }\r\n\r\n  showParts() {\r\n    this.partService.getPartsList()\r\n      .subscribe((data: Part[]) => {\r\n        this.parts = data;\r\n        this.showPartValue();\r\n      })\r\n  }\r\n\r\n  displaySubjectName(subject: Subject): string {\r\n    return subject && subject.subject_name ? subject.subject_name : '';\r\n  }\r\n\r\n  displayPartName(part: Part): string {\r\n    return part && part.part_name ? part.part_name : '';\r\n  }\r\n\r\n  showConcepts() {\r\n    const id = this.route.snapshot.paramMap.get('id');\r\n    this.conceptService.getConceptDetails(id)\r\n      .subscribe((data: Concept) => {\r\n        this.concept = data;\r\n        this.fillConceptForm(this.concept);\r\n        this.fillFunctionTiles(this.concept);\r\n      });\r\n  }\r\n\r\n  fillConceptForm(concept: Concept) {\r\n    this.updateConceptForm.controls['name'].setValue(concept.name);\r\n    this.updateConceptForm.controls['symbol'].setValue(concept.symbol);\r\n    //this.updateConceptForm.controls['optionalSymbol'].setValue(concept.symbol);\r\n    this.updateConceptForm.controls['author'].setValue(concept.author);\r\n    this.updateConceptForm.controls['meaning'].setValue(concept.meaning);\r\n    this.updateConceptForm.controls['definition'].setValue(concept.definition);\r\n  }\r\n\r\n  fillFunctionTiles(concept: Concept) {\r\n\r\n    this.functionService.listConceptFunctions(concept.concept_id)\r\n      .subscribe((data: Function[]) => {\r\n        this.functions = data;\r\n\r\n        if(this.functions.length){\r\n          document.querySelector('.empty-container').classList.add('display-none');\r\n          document.querySelector('.function-tiles-container').classList.remove('display-none');\r\n\r\n          //fill TERMS and Constraints on each function tile\r\n          for(let func of this.functions) {\r\n            //this.fillFunctionTerms(func);\r\n            //this.fillFunctionConstraints(func);\r\n            this.populateFunctionTiles(func);\r\n          }\r\n\r\n        } else {\r\n          document.querySelector('.function-tiles-container').classList.add('display-none');\r\n          document.querySelector('.empty-container').classList.remove('display-none');\r\n        }\r\n      });\r\n  }\r\n\r\n  populateFunctionTiles(func: Function) {\r\n    const funObj = func;\r\n\r\n    this.functionService.getFunctionDetails(func.func_id)\r\n      .subscribe((data: Function) => {\r\n        console.log(data);\r\n        if(data.terms.length) {\r\n          funObj.terms = data.terms;\r\n          //this.fillFunctionTerms(data);\r\n        }\r\n        if(data.constraints.length) {\r\n          funObj.constraints = data.constraints;\r\n          //this.fillFunctionConstraints(data);\r\n        }\r\n      });\r\n  }\r\n\r\n  fillFunctionTerms(func: Function): void {\r\n    if(!(func.terms && func.terms.length)){\r\n      func.termsDetails = [];\r\n      return;\r\n    }\r\n\r\n    const funObj = func;\r\n    let responses = [];\r\n\r\n    for(let term_id of func.terms) {\r\n      responses.push(this.termService.getTermDetails(term_id));\r\n    }\r\n\r\n    forkJoin(responses).subscribe((data: Term[]) => {\r\n      funObj.termsDetails = data;\r\n    });\r\n  }\r\n\r\n  fillFunctionConstraints(func: Function): void {\r\n    \t\r\n  }\r\n\r\n  updateConcept(): void {\r\n    const formValue = this.updateConceptForm.value,\r\n      data: object = {\r\n      \"name\": formValue.name,\r\n      \"author\": formValue.author,\r\n      \"meaning\": formValue.meaning,\r\n      \"definition\": formValue.definition,\r\n      \"symbol\": formValue.symbol,\r\n    };\r\n\r\n    this.fireUpdateConcept(data);\r\n  }\r\n\r\n  fireUpdateConcept(data: object): void {\r\n    const id = this.route.snapshot.paramMap.get('id');\r\n    this.conceptService.updateConcept(id, data)\r\n      .subscribe((data: Concept) => {\r\n        this.getAndFillConceptData();\r\n      });\r\n  }\r\n\r\n  showSubjectValue() {\r\n    let preSelectedSubject = localStorage.getItem(\"dvp-subject\");\r\n\r\n    if(preSelectedSubject && preSelectedSubject.length){\r\n      preSelectedSubject = JSON.parse(preSelectedSubject);\r\n      this.updateConceptForm.controls['subject'].setValue(preSelectedSubject);\r\n      this.updateConceptForm.controls['subject'].disable();\r\n    }\r\n  }\r\n\r\n  showPartValue() {\r\n    let preSelectedPart = localStorage.getItem(\"dvp-part\");\r\n\r\n    if(preSelectedPart && preSelectedPart.length){\r\n      preSelectedPart = JSON.parse(preSelectedPart);\r\n      this.updateConceptForm.controls['part'].setValue(preSelectedPart);\r\n      this.updateConceptForm.controls['part'].disable();\r\n    }\r\n  }\r\n\r\n  /*\r\n  * Function dialog\r\n   */\r\n   openDialogNewFunction(): void {\r\n    const formValue = this.updateConceptForm.value,\r\n      dialogRef = this.dialog.open(NewfunctiondialogComponent, {\r\n      width: '400px',\r\n      data: {\r\n        \"subject_id\": this.updateConceptForm.controls.subject.value.subject_id,\r\n        \"part_id\": this.updateConceptForm.controls.part.value.part_id,\r\n        \"concept_id\": this.conceptId,\r\n        \"name\": \"\",\r\n        \"ftype\": \"\",\r\n        \"symbol\": formValue.symbol,\r\n        \"terms\": [],\r\n        \"author\": formValue.author\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result: Function) => {\r\n      this.getAndFillConceptData();\r\n    });\r\n   }\r\n\r\n   /**\r\n    * Function term dialog\r\n    */\r\n   openDialogNewFunctionTerm(fun: Function): void {\r\n      const funObj = fun;\r\n      const dialogRef = this.dialog.open(NewtermdialogComponent, {\r\n        width: '80%',\r\n        data: {\r\n          \"subject_id\": this.updateConceptForm.controls.subject.value.subject_id,\r\n          \"part_id\": this.updateConceptForm.controls.part.value.part_id,\r\n          \"concept_id\": this.conceptId,\r\n          \"func_id\": fun.func_id,\r\n          \"name\" : \"\",\r\n          \"symbol\": \"\",\r\n          \"definition\": \"\",\r\n          \"location\": \"\",\r\n          \"constraints\":{\r\n            \"symbol\": [],\r\n            \"coefficient\": []\r\n          }\r\n        }\r\n      });\r\n\r\n    dialogRef.afterClosed().subscribe((result: Term) => {\r\n      //fetch latest data\r\n      this.getAndFillConceptData();\r\n    });\r\n   }\r\n\r\n  onChangeSymbol(latexValue) {\r\n    this.updateConceptForm.controls.symbol.setValue(latexValue);\r\n    //debugger;\r\n  }\r\n}\r\n","<div class=\"new-concept-form\">\r\n    <form [formGroup]=\"updateConceptForm\">\r\n        <div>\r\n            <mat-form-field appearance=\"fill\" class=\"width-48 padding-r-4\">\r\n                <mat-label>Subject</mat-label>\r\n                <input type=\"text\" placeholder=\"Select subject\" aria-label=\"Subject\" matInput formControlName=\"subject\"\r\n                    [matAutocomplete]=\"autosubject\" required>\r\n                <mat-autocomplete #autosubject=\"matAutocomplete\" [displayWith]=\"displaySubjectName\">\r\n                    <mat-option *ngFor=\"let subject of subjects\" [value]=\"subject\">\r\n                        {{subject.subject_name}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\" class=\"width-48\">\r\n                <mat-label>Part</mat-label>\r\n                <input type=\"text\" placeholder=\"Select part\" aria-label=\"Part\" matInput formControlName=\"part\"\r\n                    [matAutocomplete]=\"autopart\" required>\r\n                <mat-autocomplete #autopart=\"matAutocomplete\" [displayWith]=\"displayPartName\">\r\n                    <mat-option *ngFor=\"let part of parts\" [value]=\"part\">\r\n                        {{part.part_name}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\" class=\"width-48 padding-r-4\">\r\n                <mat-label>Name</mat-label>\r\n                <input matInput placeholder=\"Enter name of concept\" formControlName=\"name\" type=\"text\" required />\r\n            </mat-form-field>\r\n            <!-- <mat-form-field appearance=\"fill\" class=\"width-48\">\r\n                        <mat-label>Symbol</mat-label>\r\n                        <input matInput placeholder=\"Add symbol for concept\" formControlName=\"symbol\" type=\"text\"\r\n                            required />\r\n                    </mat-form-field> -->\r\n            <div class=\"width-48 symbol-holder\">\r\n                <app-math-editor [mathModel]=\"mathEquation\" [placeholder]=\"'Add symbol for concept'\"\r\n                    [mathChange]=\"changeSymbol\">\r\n                </app-math-editor>\r\n            </div>\r\n            <mat-form-field appearance=\"fill\" class=\"width-48 padding-r-4\">\r\n                <mat-label>Optional symbol</mat-label>\r\n                <input matInput placeholder=\"Add optional symbol for concept\" formControlName=\"optionalSymbol\"\r\n                    type=\"text\" />\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\" class=\"width-48\">\r\n                <mat-label>Author</mat-label>\r\n                <input matInput placeholder=\"Enter name of the author\" formControlName=\"author\" required type=\"text\" />\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\" class=\"width-48 padding-r-4\">\r\n                <mat-label>Meaning</mat-label>\r\n                <textarea matInput rows=\"5\" placeholder=\"Enter meaning of the concept\"\r\n                    formControlName=\"meaning\"></textarea>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\" class=\"width-48\">\r\n                <mat-label>Definition</mat-label>\r\n                <textarea matInput rows=\"5\" placeholder=\"Enter definition of the concept\"\r\n                    formControlName=\"definition\"></textarea>\r\n            </mat-form-field>\r\n        </div>\r\n        <div style=\"height: 36px; margin-top: 35px;\">\r\n            <!-- <button mat-raised-button color=\"primary\"\r\n                        style=\"min-width: 36px;margin-right: 10px;\">+</button><span\r\n                        style=\"color: #673ab7; font-weight: 500;\">Customize inputs</span> -->\r\n            <button mat-raised-button color=\"primary\" class=\"pull-right\" (click)=\"updateConcept()\"\r\n                [disabled]=\"!updateConceptForm.valid\">\r\n                Update concept\r\n            </button>\r\n            <!-- <button mat-stroked-button color=\"primary\" class=\"pull-right\" style=\"margin-right: 10px;\"\r\n                [disabled]=\"!updateConceptForm.valid\">\r\n                Define calculated solution\r\n            </button> -->\r\n        </div>\r\n    </form>\r\n    <mat-tab-group>\r\n        <mat-tab label=\"Functions\">\r\n            <section class=\"empty-container\">\r\n                <h5>You haven't defined any function inputs yet.</h5>\r\n                <p>\r\n                    <button mat-raised-button color=\"primary\" (click)=\"openDialogNewFunction()\">\r\n                        Define new function\r\n                    </button>\r\n                </p>\r\n            </section>\r\n            <section class=\"function-tiles-container display-none\">\r\n                <mat-grid-list cols=\"5\">\r\n                    <mat-grid-tile *ngFor=\"let func of functions\">\r\n                        <mat-card class=\"concept-card\">\r\n                            <mat-card-header>\r\n                                <h3>Function: {{func.name}}</h3>\r\n                            </mat-card-header>\r\n                            <mat-card-content>\r\n                                <h4>Terms</h4>\r\n                                <mat-chip-list aria-label=\"Terms selection\">\r\n                                    <mat-chip *ngFor=\"let term of func.terms\" color=\"accent\" selected>\r\n                                        {{term.name}}</mat-chip>\r\n                                    <mat-chip color=\"primary\" selected (click)=\"openDialogNewFunctionTerm(func)\">+\r\n                                    </mat-chip>\r\n                                </mat-chip-list>\r\n                                <h4>Constraints</h4>\r\n                                <mat-chip-list aria-label=\"Constraints selection\">\r\n                                    <mat-chip color=\"primary\" selected>+</mat-chip>\r\n                                </mat-chip-list>\r\n                            </mat-card-content>\r\n                        </mat-card>\r\n                    </mat-grid-tile>\r\n                    <mat-grid-tile>\r\n                        <mat-card>\r\n                            <button mat-raised-button color=\"primary\" (click)=\"openDialogNewFunction()\">\r\n                                Define new function\r\n                            </button>\r\n                        </mat-card>\r\n                    </mat-grid-tile>\r\n                </mat-grid-list>\r\n            </section>\r\n        </mat-tab>\r\n        <mat-tab label=\"Tables\">\r\n            <section class=\"empty-container\">\r\n                <h5>You haven't defined any table inputs yet.</h5>\r\n                <p>\r\n                    <button mat-raised-button color=\"primary\">\r\n                        Define new table\r\n                    </button>\r\n                </p>\r\n            </section>\r\n        </mat-tab>\r\n        <mat-tab label=\"Constants\">\r\n            <section class=\"empty-container\">\r\n                <h5>You haven't defined any constants yet.</h5>\r\n                <p>\r\n                    <button mat-raised-button color=\"primary\">\r\n                        Define new constant\r\n                    </button>\r\n                </p>\r\n            </section>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { UIOutputConfig } from '../concept';\r\nimport { ConceptService } from '../concept.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n//import * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n@Component({\r\n  selector: 'app-define-solution',\r\n  templateUrl: './define-solution.component.html',\r\n  styleUrls: ['./define-solution.component.scss']\r\n})\r\nexport class DefineSolutionComponent implements OnInit {\r\n // public Editor = ClassicEditor;\r\n  @ViewChild('myEditor') myEditor: any;\r\n  conceptId = null;\r\n  isNewRecord = true;\r\n\r\n  uiOutput:UIOutputConfig = {\r\n    html_template: '',\r\n  };\r\n\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private conceptService: ConceptService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.conceptId = this.route.snapshot.params.id;\r\n    if (this.conceptId) this.getUIConfig();\r\n  }\r\n\r\n  getUIConfig(){\r\n    this.conceptService.getUIOutputConfig(this.conceptId)\r\n      .subscribe((res: any) => {\r\n        //.conceptDetails = res;\r\n        if (res && res.config_id) {\r\n          Object.assign(this.uiOutput, res.config_json);\r\n          this.isNewRecord = false;\r\n        } else {\r\n          this.isNewRecord = true;\r\n        }\r\n      },\r\n      err=>{\r\n        this.isNewRecord = true;\r\n      });\r\n  }\r\n\r\n  saveSolutionDefinition(){\r\n    let service = this.isNewRecord ? \"createUIOutputConfig\" : \"updateUIOutputConfig\";\r\n\r\n    this.conceptService[service](this.conceptId, this.uiOutput).subscribe(\r\n      res => {\r\n        this.isNewRecord = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  private getContent() {\r\n    if (this.myEditor && this.myEditor.instance) {\r\n      return this.myEditor.instance.getData();\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n}\r\n","<div class=\"new-concept-form\">\r\n    <!--  <form> -->\r\n\r\n    <h3>Solution form builder</h3>\r\n    <ckeditor [(ngModel)]=\"uiOutput.html_template\" #myEditor></ckeditor>\r\n    <!--\r\n                <ckeditor [editor]=\"Editor\" [data]=\"data\"></ckeditor> -->\r\n    <div style=\"padding:35px 0\">\r\n\r\n        <button mat-raised-button class=\"pull-right\" color=\"primary\" (click)=\"saveSolutionDefinition()\">\r\n            Submit\r\n        </button>\r\n    </div>\r\n    <!-- </form> -->\r\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Part } from './part';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PartService {\n\n  constructor(private http: HttpClient) { }\n\n  getPartsList() {\n    return this.http.get<Part[]>(`${location.origin}/dvp/part/s`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Concept } from '../concept';\nimport { Subject } from 'src/app/subjects/subject';\nimport { Part } from 'src/app/parts/part';\nimport { SubjectService } from 'src/app/subjects/subject.service';\nimport { PartService } from 'src/app/parts/part.service';\nimport { ConceptService } from '../concept.service';\n\n@Component({\n  selector: 'app-update-concept-stepper',\n  templateUrl: './update-concept-stepper.component.html',\n  styleUrls: ['./update-concept-stepper.component.scss']\n})\nexport class UpdateConceptStepperComponent implements OnInit {\n\n  isLinear = false;\n  secondFormGroup: FormGroup;\n  concept: Concept;\n  subjects: Subject[];\n  parts: Part[];\n\n  showContextForm = new FormGroup({\n    subject: new FormControl(),\n    part: new FormControl(),\n  });\n\n  constructor(\n    private _formBuilder: FormBuilder,\n    private conceptService: ConceptService,\n    private route: ActivatedRoute,\n    private subjectService: SubjectService,\n    private partService: PartService,\n  ) { }\n\n  ngOnInit(): void {\n    this.secondFormGroup = this._formBuilder.group({\n      secondCtrl: ['', Validators.required]\n    });\n    this.showSubjects();\n    this.showParts();\n    this.fetchConceptDetails();\n  }\n\n  showSubjects() {\n    this.subjectService.getSubjectsList()\n      .subscribe((data: Subject[]) => {\n        this.subjects = data;\n        this.showSubjectValue();\n      });\n  }\n\n  showParts() {\n    this.partService.getPartsList()\n      .subscribe((data: Part[]) => {\n        this.parts = data;\n        this.showPartValue();\n      })\n  }\n\n  fetchConceptDetails() {\n     const id = this.route.snapshot.paramMap.get('id');\n    this.conceptService.getConceptDetails(id)\n      .subscribe((data: Concept) => {\n        this.concept = data[0];\n      })\n  }\n\n  displaySubjectName(subject: Subject): string {\n    return subject && subject.subject_name ? subject.subject_name : '';\n  }\n\n  displayPartName(part: Part): string {\n    return part && part.part_name ? part.part_name : '';\n  }\n\n   showSubjectValue() {\n    let preSelectedSubject = localStorage.getItem(\"dvp-subject\");\n\n    if(preSelectedSubject && preSelectedSubject.length){\n      preSelectedSubject = JSON.parse(preSelectedSubject);\n      this.showContextForm.controls['subject'].setValue(preSelectedSubject);\n      this.showContextForm.controls['subject'].disable();\n    }\n  }\n\n  showPartValue() {\n    let preSelectedPart = localStorage.getItem(\"dvp-part\");\n\n    if(preSelectedPart && preSelectedPart.length){\n      preSelectedPart = JSON.parse(preSelectedPart);\n      this.showContextForm.controls['part'].setValue(preSelectedPart);\n      this.showContextForm.controls['part'].disable();\n    }\n  }\n  \n}\n","<mat-sidenav-container class=\"page-container\">\n    <mat-sidenav mode=\"side\" opened class=\"side-nav\">\n        <app-menu></app-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"main-content\">\n        <mat-card>\n            <form [formGroup]=\"showContextForm\">\n                <h3>Update {{concept?.name}}</h3>\n                <mat-form-field appearance=\"fill\" class=\"width-48 padding-r-4\">\n                    <mat-label>Subject</mat-label>\n                    <input type=\"text\" placeholder=\"Select subject\" aria-label=\"Subject\" matInput formControlName=\"subject\"\n                        [matAutocomplete]=\"autosubject\" required>\n                    <mat-autocomplete #autosubject=\"matAutocomplete\" [displayWith]=\"displaySubjectName\">\n                        <mat-option *ngFor=\"let subject of subjects\" [value]=\"subject\">\n                            {{subject.subject_name}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\" class=\"width-48\">\n                    <mat-label>Part</mat-label>\n                    <input type=\"text\" placeholder=\"Select part\" aria-label=\"Part\" matInput formControlName=\"part\"\n                        [matAutocomplete]=\"autopart\" required>\n                    <mat-autocomplete #autopart=\"matAutocomplete\" [displayWith]=\"displayPartName\">\n                        <mat-option *ngFor=\"let part of parts\" [value]=\"part\">\n                            {{part.part_name}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </form>\n        </mat-card>\n        <mat-horizontal-stepper [linear]=\"isLinear\" #stepper>\n            <mat-step label=\"Configure Concept\">\n                <app-updateconcept></app-updateconcept>\n            </mat-step>\n            <mat-step label=\"Define Steps\">\n                <app-definesteps></app-definesteps>\n            </mat-step>\n            <mat-step label=\"Configure Input\">\n                <app-defineconcept></app-defineconcept>\n            </mat-step>\n            <mat-step label=\"Configure Output\">\n                <app-define-solution></app-define-solution>\n            </mat-step>\n        </mat-horizontal-stepper>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { Component, OnInit } from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Concept } from '../concept/concept';\r\nimport { ConceptService } from '../concept/concept.service';\r\nimport { Part } from '../parts/part';\r\nimport { PartService } from '../parts/part.service';\r\nimport { Subject } from '../subjects/subject';\r\nimport { SubjectService } from '../subjects/subject.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  subjectsControl = new FormControl();\r\n  partsControl = new FormControl();\r\n  subjects: Subject[];\r\n  parts: Part[];\r\n  concepts: Concept[];\r\n\r\n  constructor(\r\n    private router: Router, \r\n    private subjectService: SubjectService,\r\n    private partService: PartService,\r\n    private conceptService: ConceptService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.showSubjects();\r\n    this.showParts();\r\n    this.showConcepts();\r\n  }\r\n\r\n  showSubjects() {\r\n    this.subjectService.getSubjectsList()\r\n      .subscribe((data: Subject[]) => {\r\n        this.subjects = data;\r\n        this.showSubjectValue();\r\n      });\r\n  }\r\n\r\n  showParts() {\r\n    this.partService.getPartsList()\r\n      .subscribe((data: Part[]) => {\r\n        this.parts = data;\r\n        this.showPartValue();\r\n      })\r\n  }\r\n\r\n  showConcepts() {\r\n    this.conceptService.searchConcepts()\r\n      .subscribe((data:Concept[]) => {\r\n        this.concepts = data || [];\r\n\r\n        if(this.concepts.length) {\r\n          document.querySelector('.empty-concepts').classList.add('display-none');\r\n          document.querySelector('.concepts-list').classList.remove('display-none');\r\n        } else {\r\n          document.querySelector('.concepts-list').classList.add('display-none');\r\n          document.querySelector('.empty-concepts').classList.remove('display-none');\r\n        }\r\n        console.log(data);\r\n      })\r\n  }\r\n\r\n  displaySubjectName(subject: Subject): string {\r\n    return subject && subject.subject_name ? subject.subject_name : '';\r\n  }\r\n\r\n  displayPartName(part: Part): string {\r\n    return part && part.part_name ? part.part_name : '';\r\n  }\r\n\r\n  addConcept(): void {\r\n    this.router.navigate(['/create-concept']);\r\n  }\r\n\r\n  updateConcept(concept_id: string): void {\r\n    this.router.navigate([`update-concept/${concept_id}`]);\r\n  }\r\n\r\n  updateSubject(subject: Subject): void {\r\n    localStorage.setItem('dvp-subject', JSON.stringify(subject));\r\n  }\r\n\r\n  updatePart(part: Part): void {\r\n    localStorage.setItem('dvp-part', JSON.stringify(part));\r\n  }\r\n\r\n  showSubjectValue() {\r\n    let preSelectedSubject = localStorage.getItem(\"dvp-subject\");\r\n\r\n    if(preSelectedSubject && preSelectedSubject.length){\r\n      preSelectedSubject = JSON.parse(preSelectedSubject);\r\n      this.subjectsControl.setValue(preSelectedSubject);\r\n    }\r\n  }\r\n\r\n  showPartValue() {\r\n    let preSelectedPart = localStorage.getItem(\"dvp-part\");\r\n\r\n    if(preSelectedPart && preSelectedPart.length){\r\n      preSelectedPart = JSON.parse(preSelectedPart);\r\n      this.partsControl.setValue(preSelectedPart);\r\n    }\r\n  }\r\n}\r\n","<mat-sidenav-container class=\"page-container\">\r\n    <mat-sidenav mode=\"side\" opened class=\"side-nav\">\r\n        <app-menu></app-menu>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content class=\"main-content\">\r\n        <p>\r\n            <mat-form-field appearance=\"fill\" class=\"search-bar\">\r\n                <mat-label>Search</mat-label>\r\n                <input matInput placeholder=\"Search\">\r\n                <mat-icon matPrefix>search</mat-icon>\r\n            </mat-form-field>\r\n        </p>\r\n        <p style=\"height: 100px;padding-top: 12px;\">\r\n            <mat-card class=\"header-card\">\r\n                <mat-form-field class=\"full-width\">\r\n                    <input type=\"text\" placeholder=\"Subject\" aria-label=\"Subject\" matInput [formControl]=\"subjectsControl\"\r\n                        [matAutocomplete]=\"autosubject\">\r\n                    <mat-autocomplete #autosubject=\"matAutocomplete\" [displayWith]=\"displaySubjectName\" (optionSelected)='updateSubject($event.option.value)'>\r\n                        <mat-option *ngFor=\"let subject of subjects\" [value]=\"subject\">\r\n                            {{subject.subject_name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                </mat-form-field>\r\n            </mat-card>\r\n            <mat-card class=\"header-card\">\r\n                <mat-form-field class=\"full-width\">\r\n                    <input type=\"text\" placeholder=\"Part\" aria-label=\"Part\" matInput [formControl]=\"partsControl\"\r\n                        [matAutocomplete]=\"autopart\">\r\n                    <mat-autocomplete #autopart=\"matAutocomplete\" [displayWith]=\"displayPartName\" (optionSelected)='updatePart($event.option.value)'>\r\n                        <mat-option *ngFor=\"let part of parts\" [value]=\"part\">\r\n                            {{part.part_name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                </mat-form-field>\r\n            </mat-card>\r\n        </p>\r\n        <section class=\"empty-concepts\">\r\n            <h2>You don't have created any concepts yet.</h2>\r\n            <div>\r\n                <button mat-raised-button color=\"primary\" (click)=\"addConcept()\">+ Define new concept</button>\r\n            </div>\r\n        </section>\r\n        <section class=\"concepts-list display-none\">\r\n            <mat-grid-list cols=\"5\" rowHeight=\"150px\">\r\n                <mat-grid-tile\r\n                *ngFor=\"let concept of concepts\">\r\n                    <mat-card>\r\n                        <h4>Concept: {{concept.name}}</h4>\r\n                        <small>Author: {{concept.author}}</small>\r\n                        <mat-card-actions>\r\n                            <button mat-stroked-button class=\"pull-right\" color=\"primary\"\r\n                                (click)=\"updateConcept(concept.concept_id)\">Edit</button>\r\n                        </mat-card-actions>\r\n                    </mat-card>\r\n                </mat-grid-tile>\r\n                <mat-grid-tile>\r\n                    <mat-card>\r\n                        <h4>New concept</h4>\r\n                        <small>Define new concept</small>\r\n                        <mat-card-actions>\r\n                            <button mat-raised-button color=\"primary\"  (click)=\"addConcept()\">+ Define new concept</button>\r\n                        </mat-card-actions>\r\n                    </mat-card>\r\n                </mat-grid-tile>\r\n            </mat-grid-list>\r\n        </section>\r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, ComponentFactoryResolver, ViewChild } from '@angular/core';\r\nimport { AdComponentDirective } from './ad-component.directive';\r\nimport { ConceptFormBuilderComponent } from './concept-form-builder/concept-form-builder.component';\r\nimport { ConceptDefnition, Concept, UIInputConfig } from '../concept';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ConceptFormDialogComponent } from '../concept-form/concept-form-dialog/concept-form-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ConceptService } from '../concept.service';\r\nimport { of } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-defineconcept',\r\n  templateUrl: './defineconcept.component.html',\r\n  styleUrls: ['./defineconcept.component.scss']\r\n})\r\nexport class DefineconceptComponent implements OnInit {\r\n  @ViewChild(AdComponentDirective, { static: true }) adComponent: AdComponentDirective;\r\n\r\n  formComponents =[];\r\n  currentAdIndex = 0;\r\n  conceptId:any = null;\r\n  isNewRecord = true;\r\n  //conceptDetails: Concept;\r\n\r\n  constructor(\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    public dialog: MatDialog,\r\n    private conceptService: ConceptService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.conceptId = this.route.snapshot.params.id;\r\n\r\n    if (this.conceptId) this.getUIConfig();\r\n\r\n  }\r\n\r\n  renderConceptDefinitionForm(definition){\r\n    if (definition){\r\n      definition.forEach(item => {\r\n        this.loadComponent(item)\r\n      });\r\n    }\r\n  }\r\n\r\n  getUIConfig(){\r\n\r\n    this.conceptService.getUIInputConfig(this.conceptId)\r\n      .subscribe((res:any) =>{\r\n        //.conceptDetails = res;\r\n        if (res && res.config_id){\r\n          this.renderConceptDefinitionForm(res.config_json.form_def);\r\n          this.isNewRecord = false;\r\n        }else{\r\n          this.isNewRecord = true;\r\n        }\r\n      },\r\n      err=>{\r\n        this.isNewRecord = true;\r\n      });\r\n  }\r\n\r\n  previewForm(){\r\n    const dialogRef = this.dialog.open(ConceptFormDialogComponent, {\r\n      width: '500px',\r\n      data: this.getConceptDefinition()\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n    });\r\n  }\r\n\r\n  removeComponent(){\r\n   /*  const viewComponentRef = this.adComponent.viewContainerRef;\r\n    if (this.viewComponentRef.length < 1) return;\r\n    let componentRef = this.componentsReferences.find(x => x.instance.uniqueKey == uniqueKey);\r\n    let vcrIndex: number = this.viewComponentRef.indexOf(componentRef.hostView);\r\n\r\n    this.viewComponentRef.remove(vcrIndex);\r\n\r\n    // removing component from the list\r\n    this.componentsReferences = this.componentsReferences.filter(\r\n      x => x.instance.uniqueKey !== uniqueKey\r\n    ); */\r\n  }\r\n\r\n  loadComponent(data?:any){\r\n    this.currentAdIndex++;\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(ConceptFormBuilderComponent);\r\n    const viewComponentRef = this.adComponent.viewContainerRef;\r\n    const componentRef = viewComponentRef.createComponent<ConceptFormBuilderComponent>(componentFactory);\r\n    componentRef.instance.data = Object.assign({ count: this.currentAdIndex}, {prefills:data});\r\n    this.formComponents.push(componentRef);\r\n  }\r\n\r\n  saveDefnition(){\r\n    let uiConfig:UIInputConfig = {\r\n      form_def : this.getConceptDefinition()\r\n    }\r\n\r\n    if(this.isNewRecord){\r\n      this.conceptService.createUIInputConfig(this.conceptId, uiConfig).subscribe(\r\n        res=>{\r\n          this.isNewRecord = false;\r\n        }\r\n      );\r\n    }else{\r\n      this.conceptService.updateUIInputConfig(this.conceptId, uiConfig).subscribe();\r\n    }\r\n   // this.formComponents\r\n  }\r\n\r\n  getConceptDefinition(){\r\n    let controlsDef:ConceptDefnition[] = [];\r\n    this.formComponents.forEach(component => {\r\n      controlsDef.push(component.instance.getData());\r\n    });\r\n\r\n    return controlsDef;\r\n  }\r\n\r\n}\r\n","<div class=\"new-concept-form\">\r\n    <form>\r\n\r\n        <h3>Define concept</h3>\r\n\r\n        <div class=\"ad-banner-example\">\r\n            <ng-template appAdComponent></ng-template>\r\n        </div>\r\n\r\n        <div style=\"padding:35px 0\">\r\n            <button mat-raised-button class=\"pull-left\" color=\"primary\" (click)=\"loadComponent()\"\r\n                style=\"margin-right: 20px;\">\r\n                Add input\r\n            </button>\r\n            <button mat-raised-button class=\"pull-left\" color=\"primary\" (click)=\"previewForm()\"\r\n                *ngIf=\"formComponents.length >0\">\r\n                Preview\r\n            </button>\r\n            <button mat-raised-button class=\"pull-right\" color=\"primary\" (click)=\"saveDefnition()\"\r\n                *ngIf=\"formComponents.length >0\">\r\n                Submit\r\n            </button>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { Part } from 'src/app/parts/part';\r\nimport { PartService } from 'src/app/parts/part.service';\r\nimport { Subject } from 'src/app/subjects/subject';\r\nimport { SubjectService } from 'src/app/subjects/subject.service';\r\nimport { Concept } from '../concept';\r\nimport { ConceptService } from '../concept.service';\r\n\r\n@Component({\r\n  selector: 'app-conceptdetail',\r\n  templateUrl: './createconcept.component.html',\r\n  styleUrls: ['./createconcept.component.scss']\r\n})\r\nexport class CreateConceptComponent implements OnInit {\r\n\r\n  subjects: Subject[];\r\n  parts: Part[];\r\n  mathEquation = \"\";\r\n  createConceptForm = new FormGroup({\r\n    subject: new FormControl(),\r\n    part: new FormControl(),\r\n    name: new FormControl(''),\r\n    symbol: new FormControl(''),\r\n    optionalSymbol: new FormControl(''),\r\n    author: new FormControl(''),\r\n    meaning: new FormControl(''),\r\n    definition: new FormControl(''),\r\n  });\r\n\r\n  changeSymbol = this.onChangeSymbol.bind(this);\r\n\r\n  constructor(\r\n    private subjectService: SubjectService,\r\n    private partService: PartService,\r\n    private conceptService: ConceptService,\r\n    private router: Router,\r\n    public dialog: MatDialog\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.showSubjects();\r\n    this.showParts();\r\n  }\r\n\r\n  showSubjects() {\r\n    this.subjectService.getSubjectsList()\r\n      .subscribe((data: Subject[]) => {\r\n        this.subjects = data;\r\n        this.showSubjectValue();\r\n      });\r\n  }\r\n\r\n  showParts() {\r\n    this.partService.getPartsList()\r\n      .subscribe((data: Part[]) => {\r\n        this.parts = data;\r\n        this.showPartValue();\r\n      })\r\n  }\r\n\r\n  displaySubjectName(subject: Subject): string {\r\n    return subject && subject.subject_name ? subject.subject_name : '';\r\n  }\r\n\r\n  displayPartName(part: Part): string {\r\n    return part && part.part_name ? part.part_name : '';\r\n  }\r\n\r\n  onChangeSymbol(latexValue){\r\n    this.createConceptForm.controls.symbol.setValue(latexValue);\r\n    //debugger;\r\n  }\r\n\r\n  createConcept(): void {\r\n    const formValue = this.createConceptForm.value,\r\n      concept: Concept = {\r\n      \"subject_id\": this.createConceptForm.controls.subject.value.subject_id,\r\n      \"part_id\": this.createConceptForm.controls.part.value.part_id,\r\n      \"name\": formValue.name,\r\n      \"author\": formValue.author,\r\n      \"meaning\": formValue.meaning,\r\n      \"definition\": formValue.definition,\r\n      \"symbol\": formValue.symbol,\r\n      \"functions\": [],\r\n      \"tables\": [],\r\n      \"constants\": [],\r\n      \"p_concept_id\": \"-\"\r\n    };\r\n\r\n    this.conceptService.createNewConcept(concept)\r\n      .subscribe((data: Concept) => {\r\n        this.router.navigate([`/update-concept/${data.concept_id}`]);\r\n      });\r\n  }\r\n\r\n  showSubjectValue() {\r\n    let preSelectedSubject = localStorage.getItem(\"dvp-subject\");\r\n\r\n    if(preSelectedSubject && preSelectedSubject.length){\r\n      preSelectedSubject = JSON.parse(preSelectedSubject);\r\n      this.createConceptForm.controls['subject'].setValue(preSelectedSubject);\r\n      this.createConceptForm.controls['subject'].disable();\r\n    }\r\n  }\r\n\r\n  showPartValue() {\r\n    let preSelectedPart = localStorage.getItem(\"dvp-part\");\r\n\r\n    if(preSelectedPart && preSelectedPart.length){\r\n      preSelectedPart = JSON.parse(preSelectedPart);\r\n      this.createConceptForm.controls['part'].setValue(preSelectedPart);\r\n      this.createConceptForm.controls['part'].disable();\r\n    }\r\n  }\r\n}\r\n","<mat-sidenav-container class=\"page-container\">\r\n    <mat-sidenav mode=\"side\" opened class=\"side-nav\">\r\n        <app-menu></app-menu>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content class=\"main-content\">\r\n        <p>\r\n            <mat-form-field appearance=\"fill\" class=\"search-bar\">\r\n                <mat-label>Search</mat-label>\r\n                <input matInput placeholder=\"Search\">\r\n                <mat-icon matPrefix>search</mat-icon>\r\n            </mat-form-field>\r\n        </p>\r\n        <div class=\"new-concept-form\">\r\n            <form [formGroup]=\"createConceptForm\">\r\n                <h3>Create new concept</h3>\r\n                <div>\r\n                    <mat-form-field appearance=\"fill\" class=\"width-48 padding-r-4\">\r\n                        <mat-label>Subject</mat-label>\r\n                        <input type=\"text\" placeholder=\"Select subject\" aria-label=\"Subject\" matInput formControlName=\"subject\"\r\n                            [matAutocomplete]=\"autosubject\" required>\r\n                        <mat-autocomplete #autosubject=\"matAutocomplete\" [displayWith]=\"displaySubjectName\">\r\n                            <mat-option *ngFor=\"let subject of subjects\" [value]=\"subject\">\r\n                                {{subject.subject_name}}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"fill\" class=\"width-48\">\r\n                        <mat-label>Part</mat-label>\r\n                        <input type=\"text\" placeholder=\"Select part\" aria-label=\"Part\" matInput formControlName=\"part\"\r\n                            [matAutocomplete]=\"autopart\" required>\r\n                        <mat-autocomplete #autopart=\"matAutocomplete\" [displayWith]=\"displayPartName\">\r\n                            <mat-option *ngFor=\"let part of parts\" [value]=\"part\">\r\n                                {{part.part_name}}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"fill\" class=\"width-48 padding-r-4\">\r\n                        <mat-label>Name</mat-label>\r\n                        <input matInput placeholder=\"Enter name of concept\" formControlName=\"name\" type=\"text\" required />\r\n                    </mat-form-field>\r\n                    <!-- <mat-form-field appearance=\"fill\" class=\"width-48\">\r\n                        <mat-label>Symbol</mat-label>\r\n                        <input matInput placeholder=\"Add symbol for concept\" formControlName=\"symbol\" type=\"text\" required />\r\n                    </mat-form-field> -->\r\n                    <div class=\"width-48 symbol-holder\">\r\n                        <app-math-editor\r\n                            [mathModel] = \"mathEquation\"\r\n                            [placeholder] = \"'Add symbol for concept'\"\r\n                            [mathChange] = \"changeSymbol\"\r\n                        ></app-math-editor>\r\n                    </div>\r\n                    <mat-form-field appearance=\"fill\" class=\"width-48 padding-r-4\">\r\n                        <mat-label>Optional symbol</mat-label>\r\n                        <input matInput placeholder=\"Add optional symbol for concept\" formControlName=\"optionalSymbol\" type=\"text\" />\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"fill\" class=\"width-48\">\r\n                        <mat-label>Author</mat-label>\r\n                        <input matInput placeholder=\"Enter name of the author\" formControlName=\"author\" required type=\"text\" />\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"fill\" class=\"width-48 padding-r-4\">\r\n                        <mat-label>Meaning</mat-label>\r\n                        <textarea matInput rows=\"5\" placeholder=\"Enter meaning of the concept\" formControlName=\"meaning\"></textarea>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"fill\" class=\"width-48\">\r\n                        <mat-label>Definition</mat-label>\r\n                        <textarea matInput rows=\"5\" placeholder=\"Enter definition of the concept\" formControlName=\"definition\"></textarea>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div style=\"padding: 35px 0;\">\r\n                    <button mat-raised-button color=\"primary\" class=\"pull-right\" (click)=\"createConcept()\" [disabled]=\"!createConceptForm.valid\">\r\n                        Define concept\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>","import { Directive, ViewContainerRef} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appAdComponent]'\r\n})\r\nexport class AdComponentDirective {\r\n\r\n  constructor(\r\n    public viewContainerRef: ViewContainerRef\r\n  ) { }\r\n\r\n}\r\n","import { Component, OnInit, Renderer2, ViewChild, ElementRef, HostListener, Input } from '@angular/core';\r\nimport { MathRules } from './math-rules';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-math-editor',\r\n  templateUrl: './math-editor.component.html',\r\n  styleUrls: ['./math-editor.component.scss']\r\n})\r\nexport class MathEditorComponent implements OnInit {\r\n\r\n  @Input('mathModel') mathModel: string;\r\n  @Input('placeholder') placeholder: string = \"Enter Rule\";\r\n  @Input('mathChange') mathChange: Function;\r\n\r\n  @ViewChild('ruleInput') ruleInputElm: ElementRef;\r\n  @ViewChild('mathquillField') mathquillFieldElm: ElementRef;\r\n  @ViewChild('mathquillSubstituteField') mathquillSubstituteFieldElm: ElementRef;\r\n  @ViewChild('mathquillLatexField') mathquillLatexFieldElm: ElementRef;\r\n\r\n  symbols = new MathRules().symbols;\r\n  form: FormGroup;\r\n  isShowSymbols: boolean = false;\r\n  timeout: any = null;\r\n  isClickedInsideComponent = false;\r\n  inputHolderPosition = \"top-aligned\";\r\n  activeBasicTab = \"math\";\r\n  showPlaceholder = true\r\n\r\n  MQ = null;\r\n  mathField;\r\n\r\n  constructor(\r\n    private renderer: Renderer2\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.mathModel) this.showPlaceholder = false;\r\n    //this.mathModel = \"\\\\frac  \\\\left ( -b \\\\pm \\\\sqrt{b^2-4ac} \\\\right )  \\\\left ( 2a  \\\\right )\"; //x = {- b \\\\pm \\\\sqrt{ b ^ 2 - 4ac } \\\\over 2a}.\r\n    //this.mathModel = \"\\\\frac{\\\\left(-b\\\\pm\\\\sqrt{b^2-4ac}\\\\right)}{\\\\left(2a\\\\right)}\\\\pi \"; //x = {- b \\\\pm \\\\sqrt{ b ^ 2 - 4ac } \\\\over 2a}.\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    //this._inputNativeElement = this.renderer.selectRootElement(this.ruleInputElm).nativeElement;\r\n    this.initmathQuill()\r\n  }\r\n\r\n  ngOnChanges(changes: any){\r\n    if (changes && changes.mathModel && !changes.mathModel.firstChange){\r\n      if (changes.mathModel.previousValue != this.mathModel){\r\n        this.MQ.MathField(this.mathField).latex(changes.mathModel.currentValue);\r\n      }\r\n    }\r\n  }\r\n\r\n  @HostListener('click')\r\n  clickInside() {\r\n    this.isClickedInsideComponent = true;\r\n  }\r\n\r\n  @HostListener('document:click')\r\n  clickout() {\r\n    if (this.isClickedInsideComponent) {\r\n      this.isClickedInsideComponent = false;\r\n    } else {\r\n      this.isClickedInsideComponent = false;\r\n      this.hideSymbolBox()\r\n    }\r\n  }\r\n\r\n  onClickMathButton(e: any, rule) {\r\n    let content = rule.laTexValue;\r\n\r\n\r\n\r\n    switch (rule.actionType) {\r\n      case \"write\":\r\n        this.MQ.MathField(this.mathField).write(content);\r\n        e.stopPropagation();\r\n        break;\r\n\r\n      case \"cmd\":\r\n        this.MQ.MathField(this.mathField).cmd(content);\r\n        e.stopPropagation();\r\n        break;\r\n\r\n      default:\r\n        this.MQ.MathField(this.mathField).latex(content);\r\n        e.stopPropagation();\r\n        break;\r\n\r\n\r\n\r\n    }\r\n    /*  if (rule.actionType == \"write\"){\r\n     }else id(actionT){\r\n       this.MQ.MathField(this.mathField).cmd(content);\r\n     } */\r\n    this.MQ.MathField(this.mathField).focus();\r\n    e.preventDefault();\r\n  }\r\n\r\n  initmathQuill() {\r\n\r\n    let component = this;\r\n    this.mathField = this.renderer.selectRootElement(this.mathquillFieldElm).nativeElement;\r\n    let latexSpan = this.renderer.selectRootElement(this.mathquillLatexFieldElm).nativeElement;\r\n    this.MQ = (window as any).MathQuill.getInterface(2);\r\n    const mathEditorComponent = this;\r\n\r\n    let mathField = this.MQ.MathField(this.mathField, {\r\n      /*  substituteTextarea: () => {\r\n         return this.renderer.selectRootElement(this.mathquillSubstituteFieldElm).nativeElement;\r\n       }, */\r\n      spaceBehavesLikeTab: true, // configurable\r\n      leftRightIntoCmdGoes: 'up',\r\n      supSubsRequireOperand: true,\r\n      handlers: {\r\n        edit: function (v) { // useful event handlers\r\n          component.mathModel = mathField.latex(); // simple API\r\n          setTimeout(() => {\r\n            if (component.mathModel) component.showPlaceholder = false;\r\n            else component.showPlaceholder  = true;\r\n\r\n          }, 2);\r\n          mathEditorComponent.mathChange && mathEditorComponent.mathChange(component.mathModel)\r\n          // this.MQ.latex(latexSpan.textContent);\r\n        }\r\n      }\r\n    });\r\n\r\n    if (this.mathModel) mathField.latex(this.mathModel);\r\n  }\r\n\r\n  public frameRule(value) {\r\n    return `$$${value}$$`\r\n  }\r\n\r\n  onClickEditor() {\r\n    this.isShowSymbols = true;\r\n  }\r\n\r\n  showSymbolBox() {\r\n    this.isShowSymbols = true;\r\n  }\r\n  hideSymbolBox() {\r\n    this.isShowSymbols = false;\r\n  }\r\n\r\n  onTabChange($event){\r\n    if ($event.target.textContent == \"Basic\" && !this.activeBasicTab){\r\n      this.activeBasicTab = \"math\"\r\n    }else{\r\n      if ([\"Terms\", \"Constants\"].includes($event.target.textContent)) {\r\n        this.activeBasicTab = \"\";\r\n      }else{\r\n\r\n        this.activeBasicTab = this.activeBasicTab;\r\n      }\r\n    }\r\n  }\r\n\r\n  showButtons($event, type){\r\n    this.activeBasicTab = type;\r\n    $event.stopPropagation();\r\n   // $event.stop\r\n  }\r\n}\r\n","<div class=\"eq-edtr\">\r\n\r\n    <mat-card class=\"symb-holder sm-window\" *ngIf=\"isShowSymbols\"  [class]=\"inputHolderPosition\">\r\n\r\n        <mat-tab-group mat-align-tabs=\"sym\" class=\"eq-edtr-tabs\"  (click)=\"onTabChange($event)\">\r\n            <mat-tab *ngFor=\"let symbolGroup of symbols\" label=\"{{symbolGroup.title}}\" class=\"symb-tab\">\r\n                <ul class=\"symb-sub-list\" *ngIf=\"symbolGroup.title == 'Basic'\">\r\n                    <li (click) =\"showButtons($event, 'math')\"[class]=\"{'active' : activeBasicTab == 'math'}\">Math</li>\r\n                    <li (click) =\"showButtons($event, 'abc')\" [class]=\"{'active' : activeBasicTab == 'abc'}\">&#945; &#946; &#947;</li>\r\n                    <li (click) =\"showButtons($event, 'trig')\" [class]=\"{'active' : activeBasicTab == 'trig'}\">Trig</li>\r\n                </ul>`\r\n                <ul class=\"symb-list\" [class]=\"{'sub-list-det':symbolGroup.title == 'Basic'}\">\r\n                    <li *ngFor=\"let  rule of symbolGroup.items\">\r\n                        <button\r\n                            *ngIf=\"rule.type == 'btn' && ((activeBasicTab && rule.category == activeBasicTab) || !activeBasicTab)\"\r\n                            mat-stroked-button\r\n                            class=\"symb-btn\"\r\n                            (click)=\"onClickMathButton($event, rule)\"\r\n                        >\r\n                            <span *ngIf=\"rule.symbol\" [innerHTML]=\"rule.symbol\" [class]=\"rule.fontsize\"></span>\r\n                            <sup *ngIf=\"rule.sup\"class=\"eq-sup\"  [innerHTML]=\"rule.sup\"></sup>\r\n                            <sub *ngIf=\"rule.sub\" class=\"eq-sub\" [innerHTML]=\"rule.sub\"></sub>\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n            </mat-tab>\r\n        </mat-tab-group>\r\n\r\n        <div class=\"pointer\"></div>\r\n    </mat-card>\r\n\r\n    <mat-card class=\"eq-codepad\" (click)=\"onClickEditor()\">\r\n        <span class=\"eq-edtr-eq-placeholder\" *ngIf=\"showPlaceholder\">{{placeholder}}</span>\r\n        <span class=\"material-icons add-icon\"> add</span>\r\n\r\n        <div class=\"eq-codepad-wrapper\">\r\n            <div #mathquillField></div>\r\n            <span tabindex=0 #mathquillSubstituteField></span>\r\n        </div>\r\n        <div class=\"wrapper\" [hidden]=\"true\">\r\n            Rendered Latex:\r\n            <div #mathquillLatexField></div>\r\n        </div>\r\n    </mat-card>\r\n\r\n\r\n</div>","import { Component, OnInit, Input, ViewChild, Renderer2, ElementRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-math-quill-button',\r\n  templateUrl: './math-quill-button.component.html',\r\n  styleUrls: ['./math-quill-button.component.scss']\r\n})\r\nexport class MathQuillButtonComponent implements OnInit {\r\n  @Input('label') label: string;\r\n\r\n  @ViewChild('mathquillBtn') mathquillFieldElm: ElementRef;\r\n  @ViewChild('mathquillSubstituteField') mathquillSubstituteFieldElm: ElementRef;\r\n\r\n  MQ = null;\r\n  mathField;\r\n  constructor(\r\n    private renderer: Renderer2\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    //this._inputNativeElement = this.renderer.selectRootElement(this.ruleInputElm).nativeElement;\r\n   // this.initmathQuill();\r\n  }\r\n\r\n  initmathQuill() {\r\n\r\n\r\n\r\n    this.mathField = this.renderer.selectRootElement(this.mathquillFieldElm).nativeElement;\r\n    //let latexSpan = this.renderer.selectRootElement(this.mathquillLatexFieldElm).nativeElement;\r\n    this.MQ = (window as any).MathQuill.getInterface(2);\r\n\r\n    let mathField = this.MQ.MathField(this.mathField, {\r\n     /*  substituteTextarea: () => {\r\n        return this.renderer.selectRootElement(this.mathquillSubstituteFieldElm).nativeElement;\r\n      }, */\r\n      spaceBehavesLikeTab: true, // configurable\r\n      handlers: {\r\n        /* edit: function () { // useful event handlers\r\n          //latexSpan.textContent = mathField.latex(); // simple API\r\n        } */\r\n      }\r\n    });\r\n    this.MQ.MathField(this.mathField).latex(this.label);\r\n   // e.preventDefault();\r\n  }\r\n\r\n}\r\n","<!-- <button mat-stroked-button #mathquillBtn ></button> -->\r\n<div class=\"mth-quill-wrapper\">\r\n    <div #mathquillBtn></div>\r\n    <span tabindex=0 #mathquillSubstituteField [hidden]=\"true\"></span>\r\n    <var>h</var><sup>2</sup>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ConceptDefnition } from '../concept';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ConceptFormService } from './concept-form.service';\r\n\r\n@Component({\r\n  selector: 'app-concept-form',\r\n  templateUrl: './concept-form.component.html',\r\n  styleUrls: ['./concept-form.component.scss']\r\n})\r\nexport class ConceptFormComponent implements OnInit {\r\n  @Input() conceptsDefinitions: ConceptDefnition[] = [];\r\n  conceptForm: FormGroup;\r\n  constructor(\r\n    private conceptFormService:ConceptFormService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.conceptForm = this.conceptFormService.toFormGroup(this.conceptsDefinitions);\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"conceptForm\" class=\"frm\">\r\n    <div *ngFor=\"let definition of conceptsDefinitions\" class=\"form-row\">\r\n        <app-concept-form-control [definition]=\"definition\" [form]=\"conceptForm\"></app-concept-form-control>\r\n    </div>\r\n    <button mat-raised-button class=\"pull-right\" color=\"primary\">\r\n        Submit\r\n    </button>\r\n</form>\r\n","import { Component, OnInit, ComponentFactoryResolver, ViewChild, Input, Type, ViewContainerRef, ComponentRef } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AdComponentDirective } from '../ad-component.directive';\r\nimport { ListItemComponent } from './list-item/list-item.component';\r\nimport { Concept, ConceptDefnition } from '../../concept';\r\n\r\n@Component({\r\n  selector: 'app-concept-form-builder',\r\n  templateUrl: './concept-form-builder.component.html',\r\n  styleUrls: ['./concept-form-builder.component.scss']\r\n})\r\nexport class ConceptFormBuilderComponent implements OnInit {\r\n  @Input() data:any = {};\r\n // @ViewChild(AdComponentDirective, { static: true }) adComponent: AdComponentDirective;\r\n  @ViewChild(\"viewContainerRef\", { read: ViewContainerRef }) VCR: ViewContainerRef;\r\n\r\n  //private listItemComponents = [];\r\n  componentsReferences = Array<ComponentRef<ListItemComponent>>()\r\n  public uniqueKey = 0;\r\n\r\n  conceptDefineForm = new FormGroup({\r\n    controlName: new FormControl('', Validators.required),\r\n    controlType: new FormControl('', Validators.required),\r\n  });\r\n  inputTypes = [\r\n    {\r\n      value: \"Text\",\r\n      label: \"Text\"\r\n    },\r\n    {\r\n      value: \"List\",\r\n      label: \"List\"\r\n    }\r\n  ];\r\n  constructor(\r\n    private componentFactoryResolver: ComponentFactoryResolver\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n  ngAfterViewInit(){\r\n    if (this.data && this.data.prefills) {\r\n      this.renderForm();\r\n    }\r\n  }\r\n\r\n  renderForm(){\r\n    this.data.prefills;\r\n    this.conceptDefineForm.controls.controlName.setValue(this.data.prefills.label);\r\n    this.conceptDefineForm.controls.controlType.setValue(this.data.prefills.type);\r\n    if (this.data.prefills.options && this.data.prefills.options.length){\r\n      this.data.prefills.options.forEach(item => {\r\n        this.loadComponent(item)\r\n      });\r\n    }\r\n  }\r\n\r\n  loadComponent(data?:any) {\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(ListItemComponent);\r\n    //const viewComponentRef = this.VCR;\r\n    let componentRef = this.VCR.createComponent(componentFactory);\r\n    componentRef.instance.parent = this;\r\n    componentRef.instance.uniqueKey = ++this.uniqueKey;\r\n    componentRef.instance.data = data;\r\n    this.componentsReferences.push(componentRef);\r\n  }\r\n\r\n  removeComponent(uniqueKey) {\r\n    if (this.VCR.length < 1) return;\r\n    let componentRef = this.componentsReferences.find( x => x.instance.uniqueKey == uniqueKey);\r\n    let vcrIndex: number = this.VCR.indexOf(componentRef.hostView);\r\n\r\n    this.VCR.remove(vcrIndex);\r\n\r\n    // removing component from the list\r\n    this.componentsReferences = this.componentsReferences.filter(\r\n      x => x.instance.uniqueKey !== uniqueKey\r\n    );\r\n  }\r\n\r\n  onTypeChange(value){\r\n    if(value == \"List\"){\r\n\r\n    }else{\r\n      this.VCR.clear();\r\n      this.componentsReferences.splice(0);\r\n    }\r\n  }\r\n\r\n  getData(){\r\n    let condeptDefinition:ConceptDefnition = {\r\n      key: \"CONCEPT_DEF_\"+ this.data.count,\r\n      label: this.conceptDefineForm.controls.controlName.value,\r\n      type: this.conceptDefineForm.controls.controlType.value,\r\n      required:false,\r\n      isValid: this.validateForm(),\r\n      options : []\r\n    };\r\n    this.componentsReferences.forEach(component => {\r\n      condeptDefinition.options.push(component.instance.getData());\r\n    });\r\n    return condeptDefinition;\r\n  }\r\n\r\n  validateForm():boolean{\r\n    if(\r\n      this.conceptDefineForm.controls.controlName.invalid ||\r\n      this.conceptDefineForm.controls.controlName.invalid\r\n    ){\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n}\r\n","\r\n<form [formGroup]=\"conceptDefineForm\" class=\"frm\">\r\n    <button mat-icon-button aria-label=\"Example icon button with a vertical three dot icon\" class=\"frm-close\">\r\n        <!-- <mat-icon style=\"color:#f44336\">cancel</mat-icon> -->\r\n    </button>\r\n    <div class=\"frm-row\">\r\n        <div class=\"frm-col count\">\r\n            <div>\r\n                <span>{{data.count}}</span>\r\n            </div>\r\n        </div>\r\n        <div class=\"frm-col content\">\r\n            <mat-form-field appearance=\"fill\" class=\"width-22 padding-r-1\">\r\n                <mat-label>Label</mat-label>\r\n                <input type=\"text\" placeholder=\"Enter Label\" aria-label=\"Label\" matInput formControlName=\"controlName\" required>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\" class=\"width-22 padding-r-2\">\r\n                <mat-label>Type</mat-label>\r\n                <mat-select (selectionChange) =\"onTypeChange($event.value)\"  formControlName=\"controlType\">\r\n                    <mat-option *ngFor=\"let inputType of inputTypes\" [value]=\"inputType.value\">\r\n                        {{inputType.label}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <button\r\n                mat-mini-fab\r\n                aria-label=\"Example icon button with a menu icon\"\r\n                class=\"add-item\"\r\n                (click)=\"loadComponent()\"\r\n                *ngIf=\"conceptDefineForm.controls.controlType.value == 'List'\"\r\n            >\r\n                <mat-icon>add</mat-icon>\r\n            </button>\r\n\r\n            <!-- <h3 class=\"list-header\" *ngIf=\"conceptDefineForm.controls.controlType.value == 'List'\">List Items</h3> -->\r\n\r\n            <ng-template #viewContainerRef></ng-template>\r\n        </div>\r\n    </div>\r\n\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss'],\n})\nexport class SignupComponent implements OnInit {\n\n  signupForm = new FormGroup({\n    loginId: new FormControl('', [Validators.required]),\n    firstName: new FormControl('', [Validators.required]),\n    lastName: new FormControl(''),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    phone: new FormControl('', [Validators.required]),\n    address: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required]),\n  });\n\n  constructor(\n    private authService: AuthService,\n    private router: Router) {}\n\n  ngOnInit(): void {}\n\n  signup() {\n    const data = this.signupForm.value;\n\n    this.authService.signup({\n      \"lid\": data.loginId,\n      \"fn\": data.firstName,\n      \"ln\": data.lastName,\n      \"eml\": data.email,\n      \"bd\": data.phone,\n      \"adr\": data.address,\n      \"pwd\": data.password  \n    }).subscribe((data) => {\n      if(\n        data['logged_in'] == true &&\n        data['onboard'] === true) {\n          this.router.navigate(['/home']);\n      }\n    });\n  }\n}\n","<form [formGroup]=\"signupForm\">\n  <mat-form-field appearance=\"legacy\" class=\"full-width\">\n    <mat-label>Login ID</mat-label>\n    <input matInput placeholder=\"Enter your first name\" formControlName=\"loginId\" type=\"text\" />\n  </mat-form-field>\n  <mat-form-field appearance=\"legacy\" class=\"full-width\">\n    <mat-label>First Name</mat-label>\n    <input\n      matInput\n      placeholder=\"Enter your first name\"\n      formControlName=\"firstName\"\n      type=\"text\"\n    />\n  </mat-form-field>\n  <mat-form-field appearance=\"legacy\" class=\"full-width\">\n    <mat-label>Last Name</mat-label>\n    <input\n      matInput\n      placeholder=\"Enter your first name\"\n      formControlName=\"lastName\"\n      type=\"text\"\n    />\n  </mat-form-field>\n  <mat-form-field appearance=\"legacy\" class=\"full-width\">\n    <mat-label>Email</mat-label>\n    <input\n      matInput\n      placeholder=\"Enter your email\"\n      formControlName=\"email\"\n      type=\"email\"\n    />\n  </mat-form-field>\n  <mat-form-field appearance=\"legacy\" class=\"full-width\">\n    <mat-label>Phone Number</mat-label>\n    <span matPrefix>+91 &nbsp;</span>\n    <input\n      type=\"tel\"\n      matInput\n      placeholder=\"555-555-1234\"\n      formControlName=\"phone\"\n    />\n  </mat-form-field>\n  <mat-form-field appearance=\"legacy\" class=\"full-width\">\n    <mat-label>Address</mat-label>\n    <textarea\n      matInput\n      placeholder=\"Enter your address\"\n      formControlName=\"address\"\n    ></textarea>\n  </mat-form-field>\n  <mat-form-field appearance=\"legacy\" class=\"full-width\">\n    <mat-label>Password</mat-label>\n    <input\n      matInput\n      placeholder=\"Enter your password\"\n      formControlName=\"password\"\n      required\n      type=\"password\"\n    />\n  </mat-form-field>\n  <div class=\"btn-container\">\n    <button\n      mat-raised-button\n      type=\"submit\"\n      color=\"primary\"\n      [disabled]=\"!signupForm.valid\"\n      (click)=\"signup()\"\n    >\n      SIGNUP\n    </button>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { EvalFunction } from 'src/app/evalfunctions/evalfunction';\nimport { EvalfunctionService } from 'src/app/evalfunctions/evalfunction.service';\n\n@Component({\n  selector: 'app-createstep',\n  templateUrl: './createstep.component.html',\n  styleUrls: ['./createstep.component.scss']\n})\nexport class CreatestepComponent implements OnInit {\n\n  selectedTabIndex = 0;\n  //for evaluation form\n  functions: EvalFunction[];\n  panelOpenState = false;    //evalFunction list panel open/collapse\n  createEvalStepForm: FormGroup;\n\n  //for condition form\n  createConditionStepForm = new FormGroup({\n    type: new FormControl('conditional'),\n    name: new FormControl(''),\n    description: new FormControl(''),\n    evalFunction: new FormControl(''),\n    lhs: new FormControl(''),\n    rhs: new FormControl(''),\n    trueIndex: new FormControl(''),\n    falseIndex: new FormControl(''),\n    entryDesc: new FormControl(''),\n    exitDesc: new FormControl(''),\n  });\n\n  constructor(\n    private funcService: EvalfunctionService,\n    private fb: FormBuilder,\n    public dialogRef: MatDialogRef<CreatestepComponent>\n    ) { \n      this.createEvalStepForm = this.fb.group({\n        type: new FormControl('evaluation'),\n        name: new FormControl(''),\n        description: new FormControl(''),\n        evalFunction: new FormControl(''),\n        entryDesc: new FormControl(''),\n        exitDesc: new FormControl(''),\n        arguments: this.fb.array([]) ,\n      });\n  }\n\n  ngOnInit(): void {\n    this.fillEvalFunctions();\n  }\n\n  fillEvalFunctions() {\n    this.funcService.getListEvalFunctions()\n      .subscribe((data: EvalFunction[]) => {\n        this.functions = data;\n      });\n  }\n\n  displayFunctionName(func: EvalFunction): string {\n    return func && func.func_name ? func.func_name : '';\n  }\n\n  functionSelected() {\n    const selectedFunction: EvalFunction = this.createEvalStepForm.controls.evalFunction.value;\n    //clear existing data\n    this.panelOpenState = false;\n    this.arguments().clear();\n\n    this.funcService.getEvaluationFunction(selectedFunction)\n      .subscribe((data: EvalFunction) => {\n        const funcDetails = data;\n\n        //push new arguments from slected function\n        if(Object.keys(funcDetails.func_args).length === 0 && funcDetails.func_args.constructor === Object) {\n          //empty object\n          this.addArgument('e');\n        } else {\n          for(const property in funcDetails.func_args) {\n            this.addArgument(property);\n          }\n        }\n\n        //open collapsable panel\n        this.panelOpenState = true;\n      });\n  }\n\n  functionConditionSelected() {}\n\n  //logic to fill dynamic arguments\n  newArgument(key: string): FormGroup {\n    return this.fb.group({\n      argValue: '',\n      argKey: key\n    })\n  }\n\n  addArgument(key: string) {\n    this.arguments().push(this.newArgument(key));\n  }\n\n  arguments() : FormArray {\n    return this.createEvalStepForm.get(\"arguments\") as FormArray;\n  }\n\n  //onTabIndexChange\n  onTabIndexChange($event) {\n    this.selectedTabIndex = $event;\n  }\n\n   onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  createEvalStep() {\n    this.dialogRef.close(this.createEvalStepForm.value);\n  }\n\n  createConditionStep() {\n    this.dialogRef.close(this.createConditionStepForm.value);\n  }\n\n}\n","<h1 mat-dialog-title>Create new step</h1>\n<div mat-dialog-content>\n  <mat-tab-group (selectedIndexChange)=\"onTabIndexChange($event)\">\n    <mat-tab label=\"Evaluation Step\">\n      <form class=\"mat-elevation-z4\" [formGroup]=\"createEvalStepForm\">\n        <mat-form-field appearance=\"fill\" class=\"width-100\">\n          <mat-label>Name</mat-label>\n          <input matInput formControlName=\"name\">\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\" class=\"width-100\">\n          <mat-label>Description</mat-label>\n          <textarea matInput formControlName=\"description\"></textarea>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\" class=\"width-100\">\n          <mat-label>Entry Description</mat-label>\n          <textarea matInput formControlName=\"entryDesc\"></textarea>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\" class=\"width-100\">\n          <mat-label>Exit Description</mat-label>\n          <textarea matInput formControlName=\"exitDesc\"></textarea>\n        </mat-form-field>\n        <div class=\"switch-container\">\n          <mat-slide-toggle>Expose step</mat-slide-toggle>\n        </div>\n        <mat-form-field appearance=\"fill\" class=\"width-100\">\n          <mat-label>Evaluation Function</mat-label>\n          <input type=\"text\" placeholder=\"Select evaluation function\" aria-label=\"Evaluation Function\" matInput\n            formControlName=\"evalFunction\" [matAutocomplete]=\"autofunction\" required>\n          <mat-autocomplete #autofunction=\"matAutocomplete\" [displayWith]=\"displayFunctionName\"\n            (optionSelected)=\"functionSelected()\">\n            <mat-option *ngFor=\"let func of functions\" [value]=\"func\">\n              {{func.func_name}}\n            </mat-option>\n          </mat-autocomplete>\n        </mat-form-field>\n        <div class=\"accordian-container\">\n          <mat-accordion>\n            <mat-expansion-panel [expanded]=\"panelOpenState === true\">\n              <mat-expansion-panel-header>\n                <mat-panel-title>\n                  Map evaluation function arguments\n                </mat-panel-title>\n              </mat-expansion-panel-header>\n              <div formArrayName=\"arguments\">\n                <div *ngFor=\"let argument of arguments().controls; let i=index\" [formGroupName]=\"i\">\n                  <mat-form-field appearance=\"fill\" class=\"width-100\">\n                    <mat-label>{{argument.value.argKey}}</mat-label>\n                    <input matInput formControlName=\"argValue\">\n                  </mat-form-field>\n                </div>\n              </div>\n            </mat-expansion-panel>\n          </mat-accordion>\n        </div>\n      </form>\n    </mat-tab>\n    <mat-tab label=\"Conditional Step\">\n      <form class=\"mat-elevation-z4\" [formGroup]=\"createConditionStepForm\">\n          <mat-form-field appearance=\"fill\" class=\"width-100\">\n            <mat-label>Name</mat-label>\n            <input matInput formControlName=\"name\">\n          </mat-form-field>\n          <mat-form-field appearance=\"fill\" class=\"width-100\">\n            <mat-label>Description</mat-label>\n            <textarea matInput formControlName=\"description\"></textarea>\n          </mat-form-field>\n          <mat-form-field appearance=\"fill\" class=\"width-100\">\n            <mat-label>Evaluation Function</mat-label>\n            <input type=\"text\" placeholder=\"Select evaluation function\" aria-label=\"Evaluation Function\" matInput\n              formControlName=\"evalFunction\" [matAutocomplete]=\"autofunction\" required>\n            <mat-autocomplete #autofunction=\"matAutocomplete\" [displayWith]=\"displayFunctionName\"\n              (optionSelected)=\"functionConditionSelected()\">\n              <mat-option *ngFor=\"let func of functions\" [value]=\"func\">\n                {{func.func_name}}\n              </mat-option>\n            </mat-autocomplete>\n          </mat-form-field>\n          <mat-form-field appearance=\"fill\" class=\"width-100\">\n            <mat-label>LHS</mat-label>\n            <input matInput formControlName=\"lhs\">\n          </mat-form-field>\n          <mat-form-field appearance=\"fill\" class=\"width-100\">\n            <mat-label>RHS</mat-label>\n            <input matInput formControlName=\"rhs\">\n          </mat-form-field>\n          <mat-form-field appearance=\"fill\" class=\"width-100\">\n            <mat-label>True index step</mat-label>\n            <input matInput formControlName=\"trueIndex\">\n          </mat-form-field>\n          <mat-form-field appearance=\"fill\" class=\"width-100\">\n            <mat-label>False index step</mat-label>\n            <input matInput formControlName=\"falseIndex\">\n          </mat-form-field>\n          <div class=\"switch-container\">\n            <mat-slide-toggle>Expose step</mat-slide-toggle>\n          </div>\n          <mat-form-field appearance=\"fill\" class=\"width-100\">\n            <mat-label>Entry Description</mat-label>\n            <textarea matInput formControlName=\"entryDesc\"></textarea>\n          </mat-form-field>\n          <mat-form-field appearance=\"fill\" class=\"width-100\">\n            <mat-label>Exit Description</mat-label>\n            <textarea matInput formControlName=\"exitDesc\"></textarea>\n          </mat-form-field>\n      </form>\n    </mat-tab>\n  </mat-tab-group>\n</div>\n<div mat-dialog-actions *ngIf=\"selectedTabIndex === 0\">\n  <!-- <p>{{this.createEvalStepForm.value | json}}</p>-->\n  <button mat-button  cdkFocusInitial (click)=\"onNoClick()\">No Thanks</button>\n  <button mat-raised-button color=\"primary\" (click)=\"createEvalStep()\">Define evaluation step</button>\n</div>\n<div mat-dialog-actions *ngIf=\"selectedTabIndex === 1\">\n  <button mat-button cdkFocusInitial (click)=\"onNoClick()\">No Thanks</button>\n  <button mat-raised-button color=\"primary\" (click)=\"createConditionStep()\">Define conditional step</button>\n</div>","export class MathRules {\r\n    private readonly _symbols = [\r\n        {\r\n            title:\"Basic\",\r\n            items:[\r\n                {\r\n                    symbol: \"x\",\r\n                    fontsize: \"font-sm\",\r\n                    laTexValue: \"x\",\r\n                    actionType: \"write\",\r\n                    type: \"btn\",\r\n                    category : \"abc\"\r\n                },\r\n                {\r\n                    symbol: \"&#945;\",\r\n                    laTexValue: \"\\\\alpha\",\r\n                    actionType: \"write\",\r\n                    type: \"btn\",\r\n                    category: \"abc\"\r\n                },\r\n                {\r\n                    symbol: \"&#946;\",\r\n                    laTexValue: \"\\\\beta\",\r\n                    actionType: \"write\",\r\n                    type: \"btn\",\r\n                    category: \"abc\"\r\n                },\r\n                {\r\n                    symbol: \"&#947;\",\r\n                    laTexValue: \"\\\\gamma\",\r\n                    actionType: \"write\",\r\n                    type: \"btn\",\r\n                    category: \"abc\"\r\n                },\r\n                {\r\n                    symbol: \"&#9633;\",\r\n                    fontsize: \"font-lg\",\r\n                    sup:\"2\",\r\n                    laTexValue: \"^2\",\r\n                    actionType:\"write\",\r\n                    type: \"btn\",\r\n                    category: \"math\"\r\n                },\r\n                {\r\n                    symbol: \"x\",\r\n                    sup: \"&#9633;\",\r\n                    laTexValue: \"^\",\r\n                    actionType: \"cmd\",\r\n                    type: \"btn\",\r\n                    category: \"math\"\r\n                },\r\n                {\r\n                    symbol: \"&#8730;\",\r\n                    laTexValue: \"\\\\sqrt\",\r\n                    actionType: \"cmd\",\r\n                    type: \"btn\",\r\n                    category: \"math\"\r\n                },\r\n                {\r\n                    symbol: \"&#9633; &#8730;\",\r\n                    laTexValue: \"\\\\nthroot\",\r\n                    actionType: \"cmd\",\r\n                    type: \"btn\",\r\n                    category: \"math\"\r\n                },\r\n                {\r\n                    symbol: \"&#8723;\",\r\n                    laTexValue: \"\\\\pm\",\r\n                    actionType: \"cmd\",\r\n                    type: \"btn\",\r\n                    category: \"abc\"\r\n                },\r\n                {\r\n                    symbol: \"+\",\r\n                    laTexValue: \"+\",\r\n                    actionType: \"cmd\",\r\n                    type: \"btn\",\r\n                    category: \"math\"\r\n                },\r\n                {\r\n                    symbol: \"-\",\r\n                    laTexValue: \"-\",\r\n                    actionType: \"cmd\",\r\n                    type: \"btn\",\r\n                    category: \"math\"\r\n                },\r\n                {\r\n                    symbol: \"*\",\r\n                    laTexValue: \"\\\\times\",\r\n                    actionType: \"cmd\",\r\n                    type: \"btn\",\r\n                    category: \"math\"\r\n                },\r\n                {\r\n                    symbol: \"&#247;\",\r\n                    laTexValue: \"\\\\div\",\r\n                    actionType: \"cmd\",\r\n                    type: \"btn\",\r\n                    category: \"math\"\r\n                },\r\n                {\r\n                    symbol: \"/\",\r\n                    laTexValue: \"\\\\frac\",\r\n                    actionType: \"cmd\",\r\n                    type: \"btn\",\r\n                    category: \"math\"\r\n                },\r\n                {\r\n                    symbol: \"&#60;\",\r\n                    laTexValue: \"\\\\lt\",\r\n                    actionType: \"cmd\",\r\n                    type: \"btn\",\r\n                    category: \"math\"\r\n                },\r\n                {\r\n                    symbol: \"&#62;\",\r\n                    laTexValue: \"\\\\gt\",\r\n                    actionType: \"cmd\",\r\n                    type: \"btn\",\r\n                    category: \"math\"\r\n                },\r\n                {\r\n                    symbol: \"&#8804;\",\r\n                    laTexValue: \"\\\\le\",\r\n                    actionType: \"cmd\",\r\n                    type: \"btn\",\r\n                    category: \"math\"\r\n                },\r\n\r\n                {\r\n                    symbol: \"&#8805;\",\r\n                    laTexValue: \"\\\\ge\",\r\n                    actionType: \"cmd\",\r\n                    type: \"btn\",\r\n                    category: \"math\"\r\n                },\r\n                {\r\n                    symbol: \"&#8512;\",\r\n                    laTexValue: \"\\\\sum _{n=0}^ { }\\\\left( \\\\right)\",\r\n                    actionType: \"write\",\r\n                    type: \"btn\",\r\n                    category: \"math\"\r\n                },\r\n                {\r\n                    symbol: \"&#8747;\",\r\n                    laTexValue: \"\\\\int\",\r\n                    actionType: \"cmd\",\r\n                    type: \"btn\",\r\n                    category: \"math\"\r\n                },\r\n                {\r\n                    symbol: \"&#40; &#41;\",\r\n                    laTexValue: \"(\",\r\n                    actionType: \"cmd\",\r\n                    type: \"btn\",\r\n                    category: \"abc\"\r\n                },\r\n                {\r\n                    symbol: \" &#123; &#125;\",\r\n                    laTexValue: \"{\",\r\n                    actionType: \"cmd\",\r\n                    type: \"btn\",\r\n                    category: \"abc\"\r\n                },\r\n                {\r\n                    symbol: \" &#91; &#93;\",\r\n                    laTexValue: \"[\",\r\n                    actionType: \"cmd\",\r\n                    type: \"btn\",\r\n                    category: \"abc\"\r\n                },\r\n                {\r\n                    symbol: \"log\",\r\n                    laTexValue: \"\\\\log_{} \\\\left ( \\\\right )\",\r\n                    actionType: \"write\",\r\n                    sub: \"&#9633;\",\r\n                    type: \"btn\",\r\n                    category: \"math\"\r\n                },\r\n                {\r\n                    symbol: \"&#8734;\",\r\n                    fontsize: \"font-md\",\r\n                    laTexValue: \"\\\\infty\",\r\n                    actionType: \"write\",\r\n                    type: \"btn\",\r\n                    category: \"abc\"\r\n                },\r\n                {\r\n                    symbol: \"&#46;\",\r\n                    fontsize: \"font-md\",\r\n                    laTexValue: \"\\\\cdot\",\r\n                    actionType: \"write\",\r\n                    type: \"btn\",\r\n                    category: \"abc\"\r\n                },\r\n                {\r\n                    symbol: \"&#8594;\",\r\n                    fontsize: \"font-md\",\r\n                    laTexValue: \"\\\\rightarrow\",\r\n                    actionType: \"write\",\r\n                    type: \"btn\",\r\n                    category: \"abc\"\r\n                },\r\n                {\r\n                    symbol: \"&#8592;\",\r\n                    fontsize: \"font-md\",\r\n                    laTexValue: \"\\\\leftarrow\",\r\n                    actionType: \"write\",\r\n                    type: \"btn\",\r\n                    category: \"abc\"\r\n                },\r\n\r\n                {\r\n                    symbol: \"&#952;\",\r\n                    fontsize: \"font-md\",\r\n                    laTexValue: \"\\\\theta\",\r\n                    actionType: \"write\",\r\n                    type: \"btn\",\r\n                    category: \"trig\"\r\n                },\r\n                {\r\n                    symbol: \"f(x)\",\r\n                    fontsize: \"font-md\",\r\n                    laTexValue: \"f \\\\left ( x \\\\right )\",\r\n                    actionType: \"write\",\r\n                    type: \"btn\",\r\n                    category: \"math\"\r\n                },\r\n                {\r\n                    symbol: \"d/dx\",\r\n                   // sup:\"d\",\r\n                   // sub:\"dx\",\r\n                    fontsize: \"font-md\",\r\n                    laTexValue: \"\\\\frac {d} {dx}\",\r\n                    actionType: \"write\",\r\n                    type: \"btn\",\r\n                    category: \"math\"\r\n                },\r\n                {\r\n                    symbol: \"sin\",\r\n                    laTexValue: \"\\\\sin \\\\left ( \\\\right )\",\r\n                    type: \"btn\",\r\n                    actionType: \"write\",\r\n                    category:\"trig\"\r\n                },\r\n                {\r\n                    symbol: \"cos\",\r\n                    laTexValue: \"\\\\cos \\\\left ( \\\\right )\",\r\n                    type: \"btn\",\r\n                    actionType: \"write\",\r\n                    category: \"trig\"\r\n                },\r\n                {\r\n                    symbol: \"tan\",\r\n                    laTexValue: \"\\\\tan \\\\left ( \\\\right )\",\r\n                    type: \"btn\",\r\n                    actionType: \"write\",\r\n                    category: \"trig\"\r\n                },\r\n                {\r\n                    symbol: \"sec\",\r\n                    laTexValue: \"\\\\sec \\\\left ( \\\\right )\",\r\n                    type: \"btn\",\r\n                    actionType: \"write\",\r\n                    category: \"trig\"\r\n                },\r\n                {\r\n                    symbol: \"csc\",\r\n                    laTexValue: \"\\\\csc \\\\left ( \\\\right )\",\r\n                    type: \"btn\",\r\n                    actionType: \"write\",\r\n                    category: \"trig\"\r\n                },\r\n                {\r\n                    symbol: \"cot\",\r\n                    laTexValue: \"\\\\cot \\\\left ( \\\\right )\",\r\n                    type: \"btn\",\r\n                    actionType: \"write\",\r\n                    category: \"trig\"\r\n                },\r\n                {\r\n                    symbol: \"sinh\",\r\n                    laTexValue: \"\\\\sinh \\\\left ( \\\\right )\",\r\n                    type: \"btn\",\r\n                    actionType: \"write\",\r\n                    category: \"trig\"\r\n                },\r\n                {\r\n                    symbol: \"cosh\",\r\n                    laTexValue: \"\\\\cosh \\\\left ( \\\\right )\",\r\n                    type: \"btn\",\r\n                    actionType: \"write\",\r\n                    category: \"trig\"\r\n                },\r\n                {\r\n                    symbol: \"tanh\",\r\n                    laTexValue: \"\\\\tanh \\\\left ( \\\\right )\",\r\n                    type: \"btn\",\r\n                    actionType: \"write\",\r\n                    category: \"trig\"\r\n                },\r\n                {\r\n                    symbol: \"sech\",\r\n                    laTexValue: \"\\\\sech \\\\left ( \\\\right )\",\r\n                    type: \"btn\",\r\n                    actionType: \"write\",\r\n                    category: \"trig\"\r\n                },\r\n                {\r\n                    symbol: \"csch\",\r\n                    laTexValue: \"\\\\csch \\\\left ( \\\\right )\",\r\n                    type: \"btn\",\r\n                    actionType: \"write\",\r\n                    category: \"trig\"\r\n                },\r\n                {\r\n                    symbol: \"coth\",\r\n                    laTexValue: \"\\\\coth \\\\left ( \\\\right )\",\r\n                    type: \"btn\",\r\n                    actionType: \"write\",\r\n                    category: \"trig\"\r\n                },\r\n\r\n            ]\r\n        },\r\n        {\r\n            title: \"Terms\",\r\n            items: [\r\n\r\n            ]\r\n        },\r\n        {\r\n            title: \"Constants\",\r\n            items: [\r\n                {\r\n                    symbol: \"&#928;\",\r\n                    laTexValue: \"\\\\pi\",\r\n                    actionType: \"write\",\r\n                    type: \"btn\",\r\n                },\r\n\r\n            ]\r\n        }\r\n    ];\r\n\r\n\r\n    public get symbols() : any {\r\n        return this._symbols;\r\n    }\r\n\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'divideite-ui';\n}\n","<router-outlet></router-outlet>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ConceptDefnition } from '../../concept';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-concept-form-control',\r\n  templateUrl: './concept-form-control.component.html',\r\n  styleUrls: ['./concept-form-control.component.scss']\r\n})\r\nexport class ConceptFormControlComponent implements OnInit {\r\n  @Input() definition: ConceptDefnition;\r\n  @Input() form: FormGroup;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.definition\r\n  }\r\n\r\n}\r\n","<div [formGroup]=\"form\">\r\n    <div [ngSwitch]=\"definition.type\">\r\n        <mat-form-field appearance=\"fill\" class=\"full-width padding-r-4\" *ngSwitchCase=\"'Text'\">\r\n            <mat-label>{{definition.label}}</mat-label>\r\n            <input matInput placeholder=\"Enter {{definition.label}} value\" [formControlName]=\"definition.key\" [type]=\"definition.type\" />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\" class=\"full-width padding-r-4\" *ngSwitchCase=\"'List'\" >\r\n            <mat-label>{{definition.label}}</mat-label>\r\n            <mat-select [formControlName]=\"definition.key\">\r\n                <mat-option *ngFor=\"let opt of definition.options\" [value]=\"opt.value\">\r\n                    {{opt.label}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <!-- <div class=\"errorMessage\" *ngIf=\"!isValid\">{{question.label}} is required</div> -->\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss'],\n})\nexport class AuthComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<mat-tab-group\n  mat-stretch-tabs\n  dynamicHeight\n  color=\"accent\"\n  backgroundColor=\"primary\"\n  class=\"mat-elevation-z4\"\n>\n  <mat-tab label=\"Login\">\n    <app-login></app-login>\n  </mat-tab>\n  <mat-tab label=\"Signup\">\n    <app-signup></app-signup>\n  </mat-tab>\n</mat-tab-group>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { EvalFunction } from './evalfunction';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EvalfunctionService {\n\n  constructor(private http: HttpClient) { }\n\n  getListEvalFunctions() {\n    return this.http.get<EvalFunction[]>(`${location.origin}/dvp/a/mdm/functions/all`);\n  }\n\n  getEvaluationFunction(func: EvalFunction) {\n    return this.http.get<EvalFunction>(`${location.origin}/dvp/a/mdm/functions/${func.func_id}`);\n  }\n}\n","import { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Term } from './term';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TermService {\n\n  constructor(private http: HttpClient) { }\n\n  getTermDetails(term_id: string) {\n    return this.http.get<Term>(`${location.origin}/dvp/tm/g/${term_id}`);\n  }\n\n  createFunctionTerm(term: Term) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    return this.http.put<Term>(`${location.origin}/dvp/tm/new`, term, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  updateFunctionTerm(term_id: string ,data: object) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    return this.http.put<Term>(`${location.origin}/dvp/tm/m/${term_id}`, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { ConceptDefnition } from '../concept';\r\nimport { Validators, FormControl, FormGroup } from '@angular/forms';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConceptFormService {\r\n\r\n  constructor() { }\r\n\r\n  toFormGroup(definitions: ConceptDefnition[]) {\r\n    const group: any = {};\r\n\r\n    definitions.forEach(definition => {\r\n      group[definition.key] = definition.required ? new FormControl('', Validators.required)\r\n        : new FormControl('');\r\n    });\r\n    return new FormGroup(group);\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule  } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatBadgeModule} from '@angular/material/badge'\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { SignupComponent } from './auth/signup/signup.component';\r\nimport { AuthComponent } from './auth/auth/auth.component';\r\nimport { MenuComponent } from './generic/menu/menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { CreateConceptComponent } from './concept/createconcept/createconcept.component';\r\nimport { NewfunctiondialogComponent } from './concept/newfunctiondialog/newfunctiondialog.component';\r\nimport { UpdateconceptComponent } from './concept/updateconcept/updateconcept.component';\r\nimport { WidgetsModule } from './widgets/widgets.module';\r\nimport { CKEditorModule } from 'ckeditor4-angular';\r\n\r\nimport { ConceptFormBuilderComponent } from './concept/defineconcept/concept-form-builder/concept-form-builder.component';\r\nimport { DefineconceptComponent } from './concept/defineconcept/defineconcept.component';\r\nimport { AdComponentDirective } from './concept/defineconcept/ad-component.directive';\r\nimport { ListItemComponent } from './concept/defineconcept/concept-form-builder/list-item/list-item.component';\r\nimport { NewtermdialogComponent } from './concept/newtermdialog/newtermdialog.component';\r\nimport { DefinestepsComponent } from './steps/definesteps/definesteps.component';\r\nimport { UpdateConceptStepperComponent } from './concept/update-concept-stepper/update-concept-stepper.component';\r\nimport { ConceptFormComponent } from './concept/concept-form/concept-form.component';\r\nimport { ConceptFormControlComponent } from './concept/concept-form/concept-form-control/concept-form-control.component';\r\nimport { ConceptFormDialogComponent } from './concept/concept-form/concept-form-dialog/concept-form-dialog.component';\r\nimport { DefineSolutionComponent } from './concept/define-solution/define-solution.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SolutionComponent } from './solution/solution.component';\r\nimport { CreatestepComponent } from './steps/createstep/createstep.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    SignupComponent,\r\n    AuthComponent,\r\n    MenuComponent,\r\n    HomeComponent,\r\n    PageNotFoundComponent,\r\n    CreateConceptComponent,\r\n    NewfunctiondialogComponent,\r\n    UpdateconceptComponent,\r\n    NewtermdialogComponent,\r\n    ConceptFormBuilderComponent,\r\n    DefineconceptComponent,\r\n    AdComponentDirective,\r\n    ListItemComponent,\r\n    NewtermdialogComponent,\r\n    ConceptFormComponent,\r\n    ConceptFormControlComponent,\r\n    ConceptFormDialogComponent,\r\n    DefineSolutionComponent,\r\n    DefinestepsComponent,\r\n    UpdateConceptStepperComponent,\r\n    SolutionComponent,\r\n    CreatestepComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    FormsModule,\r\n\r\n    WidgetsModule,\r\n\r\n    MatTabsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    MatCardModule,\r\n    MatGridListModule,\r\n    MatDialogModule,\r\n    MatAutocompleteModule,\r\n    MatButtonToggleModule,\r\n    MatSelectModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatCheckboxModule,\r\n    MatExpansionModule,\r\n    MatSlideToggleModule,\r\n    MatBadgeModule,\r\n\r\n    CKEditorModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  loginForm = new FormGroup({\n    email: new FormControl('', [Validators.email]),\n    password: new FormControl(''),\n  });\n\n  constructor(\n    private router: Router,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {}\n  login(): void {\n    const data = this.loginForm.value;\n\n    this.authService.login({\n      'un': data.email,\n      'pw': data.password,\n    }).subscribe(data => {\n      if(data['logged_in'] == true) {\n          this.router.navigate(['/home']);\n      }\n    });\n  }\n}\n","<form [formGroup]=\"loginForm\">\n  <mat-form-field appearance=\"fill\" class=\"full-width\">\n    <mat-label>Email</mat-label>\n    <input\n      matInput\n      placeholder=\"Enter your email\"\n      formControlName=\"email\"\n      type=\"email\"\n      required\n    />\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"full-width\">\n    <mat-label>Password</mat-label>\n    <input\n      matInput\n      placeholder=\"Enter your password\"\n      formControlName=\"password\"\n      required\n      type=\"password\"\n    />\n  </mat-form-field>\n  <div class=\"btn-container\">\n    <button\n      mat-raised-button\n      type=\"submit\"\n      color=\"primary\"\n      [disabled]=\"!loginForm.valid\"\n      (click)=\"login()\"\n    >\n      LOGIN\n    </button>\n  </div>\n</form>\n","import { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError } from 'rxjs/operators';\nimport { throwError, of } from 'rxjs';\nimport { StepSuite } from './steps';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StepService {\n\n  constructor(private http: HttpClient) { }\n\n  createStepSuite(concept_id) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n\n    return this.http.put(`${location.origin}/dvp/c/solve/ss/new/${concept_id}`, {}, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  getStepSuite(conceptId: string) {\n    return this.http.get<StepSuite>(`${location.origin}/dvp/c/solve/ss/${conceptId}?steps=True`);\n  }\n\n  createNewStepEval(conceptId, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n\n    return this.http.put(`${location.origin}/dvp/c/solve/st/${conceptId}/1/e`, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  createNewStepConditional(conceptId, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n\n    return this.http.put(`${location.origin}/dvp/c/solve/st/${conceptId}/2/c`, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n}\n","import { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Function } from './function';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FunctionService {\n\n  constructor(private http: HttpClient) { }\n\n  getFunctionDetails(function_id: string) {\n    return this.http.get<Function>(`${location.origin}/dvp/fn/g/${function_id}`);\n  }\n\n  listConceptFunctions(concept_id: string) {\n    return this.http.get<Function[]>(`${location.origin}/dvp/fn/l/${concept_id}`);\n  }\n\n  createFunction(fun: Function) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    return this.http.put<Function>(`${location.origin}/dvp/fn/new`, fun, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  updateFunction(function_id: string, fun: object) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    return this.http.post<Function>(`${location.origin}/dvp/fn/m/${function_id}`, fun, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Subject } from './subject';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubjectService {\n\n  constructor(private http: HttpClient) { }\n\n  getSubjectsList() {\n    return this.http.get<Subject[]>(`${location.origin}/dvp/sub/s`);\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { CreatestepComponent } from '../createstep/createstep.component';\nimport { StepService } from '../step.service';\nimport { ConditionalStep, EvalStep, StepSuite } from '../steps';\n\n@Component({\n  selector: 'app-definesteps',\n  templateUrl: './definesteps.component.html',\n  styleUrls: ['./definesteps.component.scss']\n})\nexport class DefinestepsComponent implements OnInit {\n  conceptId: string;\n  stepSuitId: string;\n  stepSuitDetails: StepSuite;\n  steps = [];\n\n  constructor(\n    public dialog: MatDialog,\n    private route: ActivatedRoute,\n    private stepService: StepService,\n  ) {}\n\n  ngOnInit() {\n    this.conceptId = this.route.snapshot.paramMap.get('id');\n    this.checkForStepSuiteAndProceed();\n  }\n\n  checkForStepSuiteAndProceed() {\n    this.stepService.getStepSuite(this.conceptId)\n      .subscribe((data: StepSuite) => {\n        if(data) {\n          this.stepSuitDetails = data;\n          this.stepSuitId = data.step_suite_id;\n        }\n      });\n  }\n\n  createStepSuiteAndAddNewStep() {\n    if(this.stepSuitId && this.stepSuitId.length) {\n      this.openDialogNewSteps();\n      return;\n    }\n\n    this.stepService.createStepSuite(this.conceptId)\n      .subscribe((data) => {\n        if(data['status'].toLowerCase() === \"success\") {\n          this.stepSuitId = data['suite_id'] || '';\n        \n          if(this.stepSuitId && this.stepSuitId.length) {\n            this.openDialogNewSteps();\n          }\n        }\n      });\n  }\n\n  openDialogNewSteps(): void {\n    const dialogRef = this.dialog.open(CreatestepComponent, {\n      width: '500px',\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if(!result) {return;}\n\n      if(result.type === 'evaluation') {\n        this.createEvaluationStep(result);\n      } else {\n        this.createConditionalStep(result);\n      }\n    });\n  }\n\n  createEvaluationStep(step: EvalStep) {\n    let funcArgs = {};\n\n    for(const arg of step.arguments) {\n      funcArgs[arg.argKey] = funcArgs[arg.argValue];\n    }\n\n    this.stepService.createNewStepEval(this.conceptId, {\n      \"step_name\": step.name,\n      \"step_desc\": step.description,\n      \"eval_func_id\": step.evalFunction.func_id,\n      \"func_args\": funcArgs,\n      \"return_args\": {},\n      \"expose\": true,\n      \"entry_desc\": step.entryDesc,\n      \"exit_desc\": step.exitDesc\n    }).subscribe(data => {\n      if(data['status'].toLowerCase() === 'success') {\n        this.checkForStepSuiteAndProceed();\n      }\n    });\n  }\n\n  createConditionalStep(step: ConditionalStep) {\n    this.stepService.createNewStepConditional(this.conceptId, {\n      \"step_name\": step.name,\n      \"step_desc\": step.description,\n      \"eval_func_id\": step.evalFunction.func_id,\n      \"lhs_value\": step.lhs,\n      \"rhs_value\": step.rhs,\n      \"true_index\": step.trueIndex,\n      \"false_index\": step.falseIndex,\n      \"expose\": true,\n      \"entry_desc\": step.entryDesc,\n      \"exit_desc\": step.exitDesc,\n    }).subscribe(data => {\n      if(data['status'].toLowerCase() === 'success') {\n        this.checkForStepSuiteAndProceed();\n      }\n    });\n  }\n\n}\n","<section class=\"empty-container\" *ngIf=\"!(stepSuitDetails && stepSuitDetails.steps)\">\n    <h5>You haven't defined your solution yet.</h5>\n    <p>\n        <button mat-raised-button color=\"primary\" (click)=\"createStepSuiteAndAddNewStep()\">Define new solution</button>\n    </p>\n</section>\n<section *ngIf=\"stepSuitDetails && stepSuitDetails.steps\">\n    <mat-accordion class=\"steps-container\">\n        <mat-expansion-panel *ngFor=\"let step of stepSuitDetails?.steps | keyvalue\">\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    {{step.key}}. {{step.value.step_name}}\n                </mat-panel-title>\n                <mat-panel-description>\n                    {{step.value.step_desc}}\n                </mat-panel-description>\n            </mat-expansion-panel-header>\n            <section *ngIf=\"step.value.step_type === 'E'\">\n                <mat-form-field appearance=\"fill\" class=\"width-48 padding-r-2\">\n                    <mat-label>Type</mat-label>\n                    <input matInput disabled value=\"Evaluation\">\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\" class=\"width-48\">\n                    <mat-label>Name</mat-label>\n                    <input matInput disabled value=\"{{step.value.step_name}}\">\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\" class=\"full-width\">\n                    <mat-label>Description</mat-label>\n                    <textarea matInput disabled value=\"{{step.value.step_desc}}\"></textarea>\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\" class=\"width-48 padding-r-2\">\n                    <mat-label>Entry Description</mat-label>\n                    <textarea matInput disabled value=\"{{step.value.step_entry_desc}}\"></textarea>\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\" class=\"width-48\">\n                    <mat-label>Exit Description</mat-label>\n                    <textarea matInput disabled value=\"{{step.value.step_exit_desc}}\"></textarea>\n                </mat-form-field>\n            </section>\n            <section *ngIf=\"step.value.step_type === 'C'\">\n                <mat-form-field appearance=\"fill\" class=\"width-48 padding-r-2\">\n                    <mat-label>Type</mat-label>\n                    <input matInput disabled value=\"Evaluation\">\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\" class=\"width-48\">\n                    <mat-label>Name</mat-label>\n                    <input matInput disabled value=\"{{step.value.step_name}}\">\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\" class=\"full-width\">\n                    <mat-label>Description</mat-label>\n                    <textarea matInput disabled value=\"{{step.value.step_desc}}\"></textarea>\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\" class=\"width-48 padding-r-2\">\n                    <mat-label>Entry Description</mat-label>\n                    <textarea matInput disabled value=\"{{step.value.step_entry_desc}}\"></textarea>\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\" class=\"width-48\">\n                    <mat-label>Exit Description</mat-label>\n                    <textarea matInput disabled value=\"{{step.value.step_exit_desc}}\"></textarea>\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\" class=\"width-48 padding-r-2\">\n                    <mat-label>LHS</mat-label>\n                    <input matInput disabled value=\"{{step.value.step_func_args.lval}}\">\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\" class=\"width-48\">\n                    <mat-label>RHS</mat-label>\n                    <input matInput disabled value=\"{{step.value.step_func_args.rval}}\">\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\" class=\"width-48 padding-r-2\">\n                    <mat-label>True Index</mat-label>\n                    <input matInput disabled value=\"{{step.value.route_true_index}}\">\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\" class=\"width-48\">\n                    <mat-label>False Index</mat-label>\n                    <input matInput disabled value=\"{{step.value.route_false_index}}\">\n                </mat-form-field>\n            </section>\n        </mat-expansion-panel>\n    </mat-accordion>\n    <p>\n        <button mat-raised-button color=\"primary\" (click)=\"openDialogNewSteps()\">\n            Add new step\n        </button>\n    </p>\n</section>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ConstraintService } from 'src/app/constraints/constraint.service';\nimport { Term } from 'src/app/terms/term';\nimport { TermService } from 'src/app/terms/term.service';\n\n@Component({\n  selector: 'app-newtermdialog',\n  templateUrl: './newtermdialog.component.html',\n  styleUrls: ['./newtermdialog.component.scss']\n})\nexport class NewtermdialogComponent implements OnInit {\n  createTermForm: FormGroup;\n  options: string[] = ['LHS', 'RHS'];\n  symbol: '';\n  symbolOperators: string[] = ['=', '<', '>', '<=', '>='];\n  coefficientOperators: string[] = ['=', '<', '>', '<=', '>='];\n\n\n  constructor(\n    public dialogRef: MatDialogRef<NewtermdialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Term,\n    private termService: TermService,\n    private fb: FormBuilder,\n  ) {\n      this.createTermForm = this.fb.group({\n        name: new FormControl(''),\n        symbol: new FormControl(''),\n        definition: new FormControl(''),\n        side: new FormControl(''),\n        symbolConstraints: this.fb.array([]),\n        coefficientConstraints: this.fb.array([]),\n      });\n   }\n\n  ngOnInit(): void {\n  }\n\n  symbolConstraints(): FormArray {\n    return this.createTermForm.get('symbolConstraints') as FormArray;\n  }\n\n  newSymbolConstraint(): FormGroup {\n    const formValue = this.createTermForm.value;\n    return this.fb.group({\n      \"name\": formValue.name,\n      \"symbol\": formValue.symbol,\n      \"comparator\": '',\n      \"value\": '',\n      \"value_type\": \"constant\"\n    })\n  }\n\n  addSymbolConstraint() {\n    this.symbolConstraints().push(this.newSymbolConstraint());\n  }\n\n  coefficientConstraints(): FormArray {\n    return this.createTermForm.get('coefficientConstraints') as FormArray;\n  }\n\n  newCoefficientConstraint(): FormGroup {\n    const formValue = this.createTermForm.value;\n    return this.fb.group({\n      \"name\": formValue.name,\n      \"symbol\": formValue.symbol,\n      \"comparator\": '',\n      \"value\": '',\n      \"value_type\": \"constant\"\n    })\n  }\n\n  addCoefficientConstraint() {\n    this.coefficientConstraints().push(this.newCoefficientConstraint());\n  }\n\n  createTerm(): void {\n    const formValue = this.createTermForm.value;\n\n    this.data.name = formValue.name;\n    this.data.symbol = formValue.symbol;\n    this.data.definition = formValue.definition;\n    this.data.location = formValue.side;\n    this.data.constraints.symbol = formValue.symbolConstraints;\n    this.data.constraints.coefficient = formValue.coefficientConstraints;\n\n    this.termService.createFunctionTerm(this.data)\n      .subscribe((data: Term) => {\n        this.dialogRef.close(data);\n      });\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  // addSymbolConstraint(): void {\n  //   const formValue = this.createTermForm.value;\n\n  //   this.data.constraints.symbol.push({\n  //     \"name\": formValue.name,\n  //     \"symbol\": formValue.symbol,\n  //     \"comparator\": formValue.symbolConstraintOperator,\n  //     \"value\": formValue.symbolConstraintRHS,\n  //     \"value_type\": \"constant\"\n  //   });\n  // }\n\n  // addCoefficientConstraint(): void {\n  //   const formValue = this.createTermForm.value;\n\n  //   this.data.constraints.coefficient.push({\n  //     \"name\": formValue.name,\n  //     \"symbol\": formValue.symbol,\n  //     \"comparator\": formValue.coefficientConstraintLHS,\n  //     \"value\": formValue.coefficientConstraintRHS,\n  //     \"value_type\": \"constant\"\n  //   });\n  // }\n}\n","<h1 mat-dialog-title>Adding new term to function</h1>\n<div mat-dialog-content>\n    <form [formGroup]=\"createTermForm\">\n        <mat-form-field appearance=\"fill\" class=\"width-48 padding-r-4\">\n            <mat-label>Term Name</mat-label>\n            <input matInput placeholder=\"Enter term name\" formControlName=\"name\" type=\"text\" required />\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\" class=\"width-48\">\n            <mat-label>Symbol</mat-label>\n            <input matInput placeholder=\"Enter symbol\" formControlName=\"symbol\" type=\"text\" required  [(ngModel)]=\"symbol\"/>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\" class=\"width-48 padding-r-4\">\n            <mat-label>Definition</mat-label>\n            <input matInput placeholder=\"Enter definition\" formControlName=\"definition\" type=\"text\" />\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\" class=\"width-48\">\n            <mat-label>Side</mat-label>\n            <input type=\"text\" placeholder=\"Pick one\" aria-label=\"Side\" matInput formControlName=\"side\"\n                [matAutocomplete]=\"auto\">\n            <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n                <mat-option *ngFor=\"let option of options\" [value]=\"option\">\n                    {{option}}\n                </mat-option>\n            </mat-autocomplete>\n        </mat-form-field>\n        <section  formArrayName=\"symbolConstraints\">\n            <h4>Symbol Constraint</h4>\n            <div  *ngFor=\"let constraint of symbolConstraints().controls; let i=index\" [formGroupName]=\"i\">\n                <mat-form-field appearance=\"fill\" class=\"width-30 padding-r-5\">\n                    <mat-label>LHS</mat-label>\n                    <input matInput placeholder=\"Enter symbol constraint\" formControlName=\"symbol\" type=\"text\" [(ngModel)]=\"symbol\"/>\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\" class=\"width-30 padding-r-5\">\n                    <mat-label>Operator</mat-label>\n                    <input type=\"text\" placeholder=\"Pick one\" aria-label=\"Operators\" matInput formControlName=\"comparator\"\n                        [matAutocomplete]=\"autoOperator\">\n                    <mat-autocomplete autoActiveFirstOption #autoOperator=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let operator of symbolOperators\" [value]=\"operator\">\n                            {{operator}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\" class=\"width-30\">\n                    <mat-label>RHS</mat-label>\n                    <input matInput placeholder=\"Enter symbol constraint\" formControlName=\"value\" type=\"text\" />\n                </mat-form-field>\n            </div>\n            <p style=\"height: 38px;\">\n                <button mat-stroked-button color=\"primary\" class=\"pull-right\" (click)=\"addSymbolConstraint()\">+Add Constraint</button>\n            </p>\n        </section>\n        <section formArrayName=\"coefficientConstraints\">\n            <h4>Coefficient Constraint</h4>\n            <div *ngFor=\"let constraint of coefficientConstraints().controls; let i=index\" [formGroupName]=\"i\">\n                <mat-form-field appearance=\"fill\" class=\"width-48 padding-r-4\">\n                    <mat-label>Operator</mat-label>\n                    <input type=\"text\" placeholder=\"Pick one\" aria-label=\"Operators\" matInput formControlName=\"comparator\"\n                        [matAutocomplete]=\"autoCoefficientOperator\">\n                    <mat-autocomplete autoActiveFirstOption #autoCoefficientOperator=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let operator of coefficientOperators\" [value]=\"operator\">\n                            {{operator}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\" class=\"width-48\">\n                    <mat-label>RHS</mat-label>\n                    <input matInput placeholder=\"Enter coefficient constraint\" formControlName=\"value\" type=\"text\" />\n                </mat-form-field>\n            </div>\n            <p style=\"height: 38px;\">\n                <button mat-stroked-button color=\"primary\" class=\"pull-right\" (click)=\"addCoefficientConstraint()\">+ Add Constraint</button>\n            </p>\n        </section>\n    </form>\n</div>\n<div mat-dialog-actions>\n    <button mat-button (click)=\"onNoClick()\" cdkFocusInitial>No Thanks</button>\n    <button mat-button (click)=\"createTerm()\" [disabled]=\"!createTermForm.valid\">Define new term</button>\n    <!-- <p>{{this.createTermForm.value.symbolConstraints | json}}</p>\n    <p>{{this.createTermForm.value.coefficientConstraints | json}}</p> -->\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ConceptDefnition } from '../../concept';\r\n\r\n@Component({\r\n  selector: 'app-concept-form-dialog',\r\n  templateUrl: './concept-form-dialog.component.html',\r\n  styleUrls: ['./concept-form-dialog.component.scss']\r\n})\r\nexport class ConceptFormDialogComponent implements OnInit {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ConceptFormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: ConceptDefnition) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-concept-form [conceptsDefinitions] = \"data\"></app-concept-form>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ConceptFormBuilderComponent } from '../concept-form-builder.component';\r\n\r\n@Component({\r\n  selector: 'app-list-item',\r\n  templateUrl: './list-item.component.html',\r\n  styleUrls: ['./list-item.component.scss']\r\n})\r\nexport class ListItemComponent implements OnInit {\r\n  @Input() parent: ConceptFormBuilderComponent;\r\n  @Input() uniqueKey: number;\r\n  @Input() data: any;\r\n\r\n  public selfRef: ListItemComponent;\r\n  listItemForm = new FormGroup({\r\n    label: new FormControl(),\r\n    value: new FormControl(),\r\n  });\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    if(this.data){\r\n      this.renderComponents();\r\n    }\r\n  }\r\n\r\n  renderComponents(){\r\n    this.listItemForm.controls.label.setValue(this.data.label);\r\n    this.listItemForm.controls.value.setValue(this.data.value);\r\n  }\r\n\r\n  removeComponent(){\r\n    this.parent && this.parent.removeComponent && this.parent.removeComponent(this.uniqueKey);\r\n  }\r\n\r\n  getData(){\r\n    return {\r\n      label: this.listItemForm.controls.label.value,\r\n      value: this.listItemForm.controls.value.value\r\n    }\r\n  }\r\n\r\n}\r\n","<div>\r\n    <form [formGroup]=\"listItemForm\" class=\"frm\">\r\n        <mat-form-field appearance=\"fill\" class=\"width-22 padding-r-1\">\r\n            <mat-label>Label</mat-label>\r\n            <input type=\"text\" placeholder=\"Enter Label\" aria-label=\"Label\" matInput required formControlName=\"label\">\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\" class=\"width-22 padding-r-2\">\r\n            <mat-label>Value</mat-label>\r\n            <input type=\"text\" placeholder=\"Enter Label\" aria-label=\"Label\" matInput required formControlName=\"value\">\r\n        </mat-form-field>\r\n       <!--  <button\r\n            mat-mini-fab color=\"primary\"\r\n            aria-label=\"icon button with a menu icon \"\r\n            class=\"add-btn\"\r\n            (click)=\"addItem()\"\r\n        >\r\n            <mat-icon>check</mat-icon>\r\n        </button> -->\r\n        <button mat-mini-fab color=\"warn\" aria-label=\"Example icon button with a menu icon\" class=\"add-btn\" (click)=\"removeComponent()\">\r\n            <mat-icon>remove</mat-icon>\r\n        </button>\r\n    </form>\r\n</div>","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n\n  signup(data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n\n    return this.http.post(`${location.origin}/dvp/signup`, data, httpOptions);\n  }\n\n  login(data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n\n    return this.http.post(`${location.origin}/dvp/login`, data, httpOptions);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-sidenav-container class=\"page-container\">\n    <mat-sidenav mode=\"side\" opened class=\"side-nav\">\n        <app-menu></app-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"main-content\">\n        <mat-card>Page not found!!</mat-card>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthComponent } from './auth/auth/auth.component';\r\nimport { CreateConceptComponent } from './concept/createconcept/createconcept.component';\r\nimport { UpdateConceptStepperComponent } from './concept/update-concept-stepper/update-concept-stepper.component';\r\nimport { UpdateconceptComponent } from './concept/updateconcept/updateconcept.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { DefinestepsComponent } from './steps/definesteps/definesteps.component';\r\nimport { DefineconceptComponent } from './concept/defineconcept/defineconcept.component';\r\nimport { ConceptFormComponent } from './concept/concept-form/concept-form.component';\r\nimport { DefineSolutionComponent } from './concept/define-solution/define-solution.component';\r\nimport { SolutionComponent } from './solution/solution.component';\r\n\r\nconst routes: Routes = [\r\n  {path: 'home', component: HomeComponent},\r\n  {path: '', component: AuthComponent},\r\n  {path: 'login', component: AuthComponent},\r\n  {path: 'create-concept', component: CreateConceptComponent},\r\n  {path: 'update-concept/:id', component: UpdateConceptStepperComponent},\r\n  {path: 'define-steps', component: DefinestepsComponent},\r\n  {path: 'update-concept/:id', component: UpdateconceptComponent},\r\n  { path: 'define-concept/:id', component: DefineconceptComponent},\r\n  {path: 'concept-form', component: ConceptFormComponent},\r\n  { path: 'define-solution/:id', component: DefineSolutionComponent},\r\n  {path: '404', component: PageNotFoundComponent},\r\n  {path: 'solution', component: SolutionComponent},\r\n  {path: '**', component: PageNotFoundComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { throwError, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Concept, UIInputConfig, UIOutputConfig } from './concept';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConceptService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  searchConcepts() {\r\n    return this.http.get<Concept[]>(`${location.origin}/dvp/c/s`);\r\n  }\r\n\r\n  getConceptDetails(concept_id: string) {\r\n    return this.http.get<Concept>(`${location.origin}/dvp/c/g/${concept_id}`);\r\n  }\r\n\r\n  createNewConcept(concept: Concept) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json'\r\n      })\r\n    };\r\n    return this.http.put<Concept>(`${location.origin}/dvp/c/new`, concept, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  updateConcept(concept_id: string ,data: object) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json'\r\n      })\r\n    };\r\n    return this.http.post<Concept>(`${location.origin}/dvp/c/m/${concept_id}`, data, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n\r\n  //UI input services\r\n  createUIInputConfig(concept_id: string, data: object){\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n    return this.http.put<UIInputConfig>(`${location.origin}/dvp/c/i/new/${concept_id}`, data, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n   // http://divideite.dev/dvp/c/i/new/de546acc-200b-11eb-8a67-0028f89245b3\r\n  }\r\n\r\n  updateUIInputConfig(definition_id: string, data: object){\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n    return this.http.post<UIInputConfig>(`${location.origin}/dvp/c/i/${definition_id}`, data, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getUIInputConfig(concept_id: string){\r\n    return this.http.get<UIInputConfig>(`${location.origin}/dvp/c/i/${concept_id}`);\r\n  }\r\n\r\n  //UI output services\r\n  createUIOutputConfig(concept_id: string, data: object) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n    return this.http.put<UIOutputConfig>(`${location.origin}/dvp/c/o/new/${concept_id}`, data, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n    // http://divideite.dev/dvp/c/i/new/de546acc-200b-11eb-8a67-0028f89245b3\r\n  }\r\n\r\n  updateUIOutputConfig(definition_id: string, data: object) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n    return this.http.post<UIOutputConfig>(`${location.origin}/dvp/c/o/${definition_id}`, data, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getUIOutputConfig(concept_id: string) {\r\n    return this.http.get<UIOutputConfig>(`${location.origin}/dvp/c/o/${concept_id}`);\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong.\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    // Return an observable with a user-facing error message.\r\n    return throwError(\r\n      'Something bad happened; please try again later.');\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}